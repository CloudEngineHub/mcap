Search.setIndex({"docnames": ["index", "mcap-apidoc/index", "mcap-apidoc/mcap", "mcap-apidoc/mcap.chunk_builder", "mcap-apidoc/mcap.data_stream", "mcap-apidoc/mcap.exceptions", "mcap-apidoc/mcap.mcap0", "mcap-apidoc/mcap.mcap0.exceptions", "mcap-apidoc/mcap.mcap0.message_queue", "mcap-apidoc/mcap.mcap0.reader", "mcap-apidoc/mcap.mcap0.records", "mcap-apidoc/mcap.mcap0.serialization", "mcap-apidoc/mcap.mcap0.stream_reader", "mcap-apidoc/mcap.mcap0.warning", "mcap-apidoc/mcap.mcap0.well_known", "mcap-apidoc/mcap.mcap0.writer", "mcap-apidoc/mcap.message_queue", "mcap-apidoc/mcap.opcode", "mcap-apidoc/mcap.reader", "mcap-apidoc/mcap.records", "mcap-apidoc/mcap.serialization", "mcap-apidoc/mcap.stream_reader", "mcap-apidoc/mcap.summary", "mcap-apidoc/mcap.well_known", "mcap-apidoc/mcap.writer", "mcap-protobuf-apidoc/index", "mcap-protobuf-apidoc/mcap_protobuf", "mcap-protobuf-apidoc/mcap_protobuf.decoder", "mcap-protobuf-apidoc/mcap_protobuf.reader", "mcap-protobuf-apidoc/mcap_protobuf.schema", "mcap-protobuf-apidoc/mcap_protobuf.writer", "mcap-ros1-apidoc/index", "mcap-ros1-apidoc/mcap_ros1", "mcap-ros1-apidoc/mcap_ros1.decoder", "mcap-ros1-apidoc/mcap_ros1.reader", "mcap-ros1-apidoc/mcap_ros1.writer", "mcap-ros2-apidoc/index", "mcap-ros2-apidoc/mcap_ros2", "mcap-ros2-apidoc/mcap_ros2.cdr", "mcap-ros2-apidoc/mcap_ros2.decoder", "mcap-ros2-apidoc/mcap_ros2.dynamic", "mcap-ros2-apidoc/mcap_ros2.reader", "mcap-ros2-apidoc/mcap_ros2.writer", "protobuf_example", "raw_reader_writer_example", "ros1_example", "ros2_example", "ros2_noenv_example"], "filenames": ["index.rst", "mcap-apidoc/index.rst", "mcap-apidoc/mcap.rst", "mcap-apidoc/mcap.chunk_builder.rst", "mcap-apidoc/mcap.data_stream.rst", "mcap-apidoc/mcap.exceptions.rst", "mcap-apidoc/mcap.mcap0.rst", "mcap-apidoc/mcap.mcap0.exceptions.rst", "mcap-apidoc/mcap.mcap0.message_queue.rst", "mcap-apidoc/mcap.mcap0.reader.rst", "mcap-apidoc/mcap.mcap0.records.rst", "mcap-apidoc/mcap.mcap0.serialization.rst", "mcap-apidoc/mcap.mcap0.stream_reader.rst", "mcap-apidoc/mcap.mcap0.warning.rst", "mcap-apidoc/mcap.mcap0.well_known.rst", "mcap-apidoc/mcap.mcap0.writer.rst", "mcap-apidoc/mcap.message_queue.rst", "mcap-apidoc/mcap.opcode.rst", "mcap-apidoc/mcap.reader.rst", "mcap-apidoc/mcap.records.rst", "mcap-apidoc/mcap.serialization.rst", "mcap-apidoc/mcap.stream_reader.rst", "mcap-apidoc/mcap.summary.rst", "mcap-apidoc/mcap.well_known.rst", "mcap-apidoc/mcap.writer.rst", "mcap-protobuf-apidoc/index.rst", "mcap-protobuf-apidoc/mcap_protobuf.rst", "mcap-protobuf-apidoc/mcap_protobuf.decoder.rst", "mcap-protobuf-apidoc/mcap_protobuf.reader.rst", "mcap-protobuf-apidoc/mcap_protobuf.schema.rst", "mcap-protobuf-apidoc/mcap_protobuf.writer.rst", "mcap-ros1-apidoc/index.rst", "mcap-ros1-apidoc/mcap_ros1.rst", "mcap-ros1-apidoc/mcap_ros1.decoder.rst", "mcap-ros1-apidoc/mcap_ros1.reader.rst", "mcap-ros1-apidoc/mcap_ros1.writer.rst", "mcap-ros2-apidoc/index.rst", "mcap-ros2-apidoc/mcap_ros2.rst", "mcap-ros2-apidoc/mcap_ros2.cdr.rst", "mcap-ros2-apidoc/mcap_ros2.decoder.rst", "mcap-ros2-apidoc/mcap_ros2.dynamic.rst", "mcap-ros2-apidoc/mcap_ros2.reader.rst", "mcap-ros2-apidoc/mcap_ros2.writer.rst", "protobuf_example.rst", "raw_reader_writer_example.rst", "ros1_example.rst", "ros2_example.rst", "ros2_noenv_example.rst"], "titles": ["MCAP Python Library", "mcap", "mcap package", "mcap.chunk_builder module", "mcap.data_stream module", "mcap.exceptions module", "mcap.mcap0 package", "mcap.mcap0.exceptions module", "mcap.mcap0.message_queue module", "mcap.mcap0.reader module", "mcap.mcap0.records module", "mcap.mcap0.serialization module", "mcap.mcap0.stream_reader module", "mcap.mcap0.warning module", "mcap.mcap0.well_known module", "mcap.mcap0.writer module", "mcap.message_queue module", "mcap.opcode module", "mcap.reader module", "mcap.records module", "mcap.serialization module", "mcap.stream_reader module", "mcap.summary module", "mcap.well_known module", "mcap.writer module", "mcap_protobuf", "mcap_protobuf package", "mcap_protobuf.decoder module", "mcap_protobuf.reader module", "mcap_protobuf.schema module", "mcap_protobuf.writer module", "mcap_ros1", "mcap_ros1 package", "mcap_ros1.decoder module", "mcap_ros1.reader module", "mcap_ros1.writer module", "mcap_ros2", "mcap_ros2 package", "mcap_ros2.cdr module", "mcap_ros2.decoder module", "mcap_ros2.dynamic module", "mcap_ros2.reader module", "mcap_ros2.writer module", "Working with Protobuf Messages", "Basic Reading and Writing", "Working with ROS 1 Messages", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">rosbag2_py</span></code> to use MCAP with ROS 2", "Working with ROS 2 Messages"], "terms": {"thi": [0, 16, 18, 24, 28, 30, 34, 35, 40, 41, 42, 47], "provid": [0, 18, 28, 30, 34, 41], "class": [0, 3, 4, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 33, 34, 35, 38, 39, 41, 42], "read": [0, 2, 4, 18, 19, 21, 28, 34, 38, 41], "write": [0, 2, 4, 19, 24, 30, 35, 38, 42], "file": [0, 18, 24, 28, 30, 34, 39, 41, 46, 47], "format": [0, 24, 38], "basic": 0, "messag": [0, 1, 2, 3, 16, 17, 18, 19, 23, 24, 27, 28, 30, 33, 34, 35, 39, 40, 41, 42], "work": 0, "protobuf": [0, 2, 23, 27, 28, 30], "reader": [0, 1, 2, 6, 25, 26, 31, 32, 36, 37, 44, 46, 47], "writer": [0, 1, 2, 6, 25, 26, 29, 31, 32, 36, 37, 44, 46, 47], "ro": [0, 34], "1": [0, 17, 24, 38, 43, 44, 47], "us": [0, 18, 23, 24, 28, 34, 38, 40, 41, 47], "rosbag2_pi": [0, 47], "2": [0, 17, 24, 38], "workspac": 0, "setup": 0, "packag": [0, 1, 25, 31, 36, 46, 47], "mcap_protobuf": [0, 43], "mcap_ros1": [0, 45], "mcap_ros2": [0, 47], "index": [0, 24, 30], "modul": [0, 1, 25, 31, 36], "search": 0, "page": 0, "subpackag": 1, "mcap0": [1, 2], "submodul": [1, 25, 31, 36], "content": [1, 18, 25, 27, 31, 33, 36, 39], "chunk_build": [1, 2], "chunkbuild": [1, 2, 3], "data_stream": [1, 2], "readdatastream": [1, 2, 4, 19], "recordbuild": [1, 2, 4, 19], "except": [1, 2, 6, 27, 33, 39, 42], "endoffil": [1, 2, 5], "invalidmag": [1, 2, 5], "mcaperror": [1, 2, 5, 27, 33, 39, 42], "message_queu": [1, 2, 6], "messagequeu": [1, 2, 16], "opcod": [1, 2, 4], "mcapread": [1, 2, 18, 28, 34, 41], "nonseekingread": [1, 2, 18], "seekingread": [1, 2, 18], "make_read": [1, 2, 18, 44], "record": [1, 2, 6, 18, 20, 21, 23, 24, 27, 28, 33, 34, 39, 41, 42, 47], "attach": [1, 2, 17, 18, 19, 24], "attachmentindex": [1, 2, 19], "channel": [1, 2, 3, 16, 17, 18, 19, 24, 28, 32, 34, 35, 37, 41, 42, 44, 47], "chunk": [1, 2, 16, 17, 18, 19, 24], "chunkindex": [1, 2, 16, 19], "dataend": [1, 2, 18, 19], "footer": [1, 2, 17, 19, 30], "header": [1, 2, 17, 18, 19, 47], "mcaprecord": [1, 2, 19, 20, 21], "messageindex": [1, 2, 19], "metadata": [1, 2, 17, 18, 19, 24, 28, 34, 41], "metadataindex": [1, 2, 19], "schema": [1, 2, 3, 16, 17, 18, 19, 23, 24, 25, 26, 27, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 47], "statist": [1, 2, 17, 19], "summaryoffset": [1, 2, 19], "serial": [1, 2, 6, 38, 40, 46], "normalize_valu": [1, 2, 20], "stringify_record": [1, 2, 20], "stream_read": [1, 2, 6], "streamread": [1, 2, 21], "summari": [1, 2, 18, 24], "well_known": [1, 2, 6], "messageencod": [1, 2, 23], "profil": [1, 2, 19, 23, 24, 34, 41], "schemaencod": [1, 2, 23], "compressiontyp": [1, 2, 24], "indextyp": [1, 2, 24], "warn": [2, 6], "deprecation_notic": [2, 6, 13], "add_channel": [2, 3], "add_messag": [2, 3, 24, 44], "add_schema": [2, 3], "count": [2, 3, 4, 28, 30, 34, 41], "end": [2, 3, 4], "reset": [2, 3], "checksum": [2, 4], "read1": [2, 4], "read2": [2, 4], "read4": [2, 4], "read8": [2, 4], "read_prefixed_str": [2, 4], "finish_record": [2, 4], "start_record": [2, 4], "write1": [2, 4], "write2": [2, 4], "write4": [2, 4], "write8": [2, 4], "write_prefixed_str": [2, 4], "pop": [2, 16], "push": [2, 16], "attachment_index": [2, 17], "chunk_index": [2, 17], "data_end": [2, 17], "message_index": [2, 17], "metadata_index": [2, 17], "summary_offset": [2, 17], "get_head": [2, 18], "get_summari": [2, 18], "iter_attach": [2, 18], "iter_messag": [2, 18, 28, 34, 41, 44], "iter_metadata": [2, 18], "create_tim": [2, 19, 24], "data": [2, 4, 18, 19, 21, 24, 28, 34, 37, 38, 40, 41, 43, 44, 45, 46], "log_tim": [2, 19, 24, 26, 28, 30, 32, 34, 35, 37, 41, 42, 43, 44, 45, 47], "media_typ": [2, 19, 24], "name": [2, 19, 24, 40, 44, 46, 47], "data_s": [2, 19], "length": [2, 4, 19, 24, 38], "offset": [2, 19, 37, 38], "id": [2, 19, 24, 47], "message_encod": [2, 19, 24, 44], "schema_id": [2, 19, 24, 44], "topic": [2, 18, 19, 24, 28, 30, 32, 34, 35, 41, 42, 43, 44, 45, 46, 47], "compress": [2, 19, 24], "message_end_tim": [2, 19], "message_start_tim": [2, 19], "uncompressed_crc": [2, 19], "uncompressed_s": [2, 19], "chunk_length": [2, 19], "chunk_start_offset": [2, 19], "compressed_s": [2, 19], "message_index_length": [2, 19], "message_index_offset": [2, 19], "data_section_crc": [2, 19], "summary_crc": [2, 19], "summary_offset_start": [2, 19], "summary_start": [2, 19], "librari": [2, 19, 24, 46, 47], "channel_id": [2, 19, 24, 44], "publish_tim": [2, 19, 24, 26, 28, 30, 32, 34, 35, 37, 41, 42, 43, 44, 47], "sequenc": [2, 19, 24, 28, 30, 34, 35, 41, 42, 47], "encod": [2, 19, 23, 24, 28, 34, 40, 41, 42, 44], "attachment_count": [2, 19], "channel_count": [2, 19], "channel_message_count": [2, 19], "chunk_count": [2, 19], "message_count": [2, 19], "metadata_count": [2, 19], "schema_count": [2, 19], "group_length": [2, 19], "group_opcod": [2, 19], "group_start": [2, 19], "cbor": [2, 23], "cdr": [2, 23, 36, 37, 42, 46], "flatbuff": [2, 23], "json": [2, 23, 44], "ros1": [2, 23, 33, 34, 40, 41], "ros2": [2, 23, 39, 40, 41, 42, 46, 47], "jsonschema": [2, 23, 44], "ros2idl": [2, 23], "selfdescrib": [2, 23], "lz4": [2, 24], "none": [2, 18, 19, 24, 28, 30, 34, 35, 41, 42], "zstd": [2, 24], "all": [2, 24, 47], "add_attach": [2, 24], "add_metadata": [2, 24], "finish": [2, 24, 26, 30, 32, 35, 37, 42, 44, 45, 47], "register_channel": [2, 24, 44], "register_schema": [2, 24, 25, 26, 29, 44], "start": [2, 24, 38, 44, 46], "sourc": [3, 4, 5, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42], "base": [3, 4, 5, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 33, 34, 35, 38, 39, 41, 42, 46], "object": [3, 4, 16, 18, 19, 21, 22, 23, 24, 27, 28, 30, 33, 34, 35, 38, 39, 41, 42, 44], "properti": [3, 4, 21, 28, 34, 41, 44], "stream": [4, 18, 19, 21, 24, 28, 34, 35, 38, 41, 42, 44], "io": [4, 18, 21, 24, 28, 34, 35, 41, 42], "byte": [4, 18, 19, 20, 21, 24, 28, 34, 38, 40, 41], "calculate_crc": 4, "bool": [4, 16, 18, 21, 24, 28, 34, 38, 41], "fals": [4, 16, 18, 21, 28, 34, 41], "int": [4, 16, 18, 19, 20, 24, 28, 30, 34, 35, 38, 41, 42], "str": [4, 18, 19, 20, 21, 24, 28, 30, 34, 35, 38, 40, 41, 42, 46], "valu": [4, 17, 18, 20, 24, 38, 47], "bad_mag": 5, "log_time_ord": [16, 18, 28, 34, 41], "revers": [16, 18, 28, 34, 41], "A": [16, 24, 40, 43, 47], "queue": 16, "indic": [16, 24], "paramet": [16, 18, 24, 27, 28, 30, 33, 34, 35, 39, 40, 41, 42], "true": [16, 18, 24, 28, 34, 41], "act": 16, "prioriti": 16, "order": [16, 18, 21, 28, 34, 41], "log": [16, 18, 24, 28, 34, 35, 41, 42], "time": [16, 18, 24, 28, 34, 35, 41, 42, 44, 47], "return": [16, 18, 21, 24, 27, 33, 38, 39, 40, 41, 46], "element": 16, "insert": 16, "descend": [16, 18, 28, 34, 41], "rather": 16, "than": 16, "ascend": [16, 18, 28, 34, 41], "union": [16, 20, 21, 24, 28, 34, 35, 38, 41, 42], "tupl": [16, 18, 19, 38], "item": 16, "intenum": [17, 38], "an": [17, 18, 21, 24, 27, 28, 30, 33, 34, 35, 38, 39, 41, 42, 46, 47], "enumer": [17, 24], "9": 17, "10": [17, 45, 46, 47], "4": [17, 24], "6": 17, "8": [17, 24, 38, 44], "15": 17, "5": 17, "7": 17, "12": 17, "13": 17, "3": [17, 24, 38, 47], "11": [17, 43], "14": 17, "high": [18, 28, 34, 41], "level": [18, 28, 30, 34, 40, 41], "out": [18, 28], "validate_crc": [18, 21], "abc": 18, "section": 18, "where": 18, "avail": [18, 23, 24], "effici": 18, "onli": [18, 28], "part": 18, "ar": [18, 23, 28, 34, 38, 41], "need": [18, 23, 28, 34, 35, 41, 42, 46, 47], "like": 18, "from": [18, 21, 27, 28, 33, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47], "valid": [18, 28, 34, 41], "crc": 18, "abstract": [18, 30], "recor": 18, "begin": 18, "option": [18, 24, 28, 30, 34, 35, 41, 42], "iter": [18, 21, 28, 34, 41], "through": [18, 28, 34, 41], "start_tim": [18, 28, 34, 41, 46], "end_tim": [18, 28, 34, 41], "integ": [18, 24, 38], "nanosecond": [18, 28, 30, 34, 35, 41, 42], "timestamp": [18, 28, 30, 34, 35, 41, 42, 46], "befor": [18, 28, 34, 35, 41, 42], "includ": [18, 28, 34, 41], "after": [18, 28, 34, 40, 41], "yield": [18, 28, 34, 41, 46], "If": [18, 24, 28, 34, 41], "thei": [18, 28, 34, 41], "appear": [18, 28, 34, 41], "both": [18, 28, 34, 41], "non": 18, "seekabl": 18, "pipe": 18, "socket": 18, "contain": [18, 27, 28, 33, 34, 38, 39, 40, 41], "set": [18, 23, 24], "caus": 18, "entir": 18, "load": 18, "memori": 18, "ani": [18, 20, 24, 27, 28, 29, 30, 33, 34, 35, 40, 41, 42], "doe": [18, 24], "becaus": 18, "i": [18, 24, 35, 42, 43, 45, 46, 47], "design": 18, "when": [18, 27, 28, 30, 34, 41, 47], "To": [18, 46], "while": [18, 46], "construct": 18, "appropri": 18, "implement": 18, "static": 19, "dict": [19, 20, 24, 34, 40], "list": [19, 23, 24, 28, 34, 38, 41], "input": [21, 46], "bytesio": 21, "rawiobas": 21, "bufferedread": 21, "skip_mag": 21, "emit_chunk": 21, "sequenti": 21, "encount": 21, "enum": [23, 24], "well": [23, 24], "known": [23, 24], "specif": 23, "you": [23, 28, 34, 41, 46, 47], "don": 23, "t": 23, "custom": 23, "string": [23, 24, 37, 38, 44, 45, 46, 47], "allow": 23, "ros1msg": 23, "ros2msg": 23, "flag": 24, "30": 24, "16": [24, 38], "output": [24, 30, 35, 37, 38, 42, 46], "bufferedwrit": [24, 35, 38, 42], "chunk_siz": 24, "1048576": 24, "index_typ": 24, "repeat_channel": 24, "repeat_schema": 24, "use_chunk": 24, "use_statist": 24, "use_summary_offset": 24, "add": 24, "which": [24, 35, 42], "wa": [24, 28, 30, 34, 35, 41, 42], "creat": [24, 46, 47], "must": [24, 35, 38, 40, 42], "zero": 24, "e": 24, "g": 24, "scene1": 24, "jpg": 24, "media": 24, "type": [24, 44, 45, 46, 47], "text": [24, 40, 47], "plain": 24, "0": [24, 28, 30, 34, 35, 38, 41, 42, 45, 46, 47], "new": 24, "enabl": 24, "ad": 24, "current": [24, 35, 38, 42], "The": [24, 27, 28, 33, 34, 35, 38, 39, 40, 41, 42], "should": 24, "counter": 24, "assign": 24, "publish": [24, 28, 30, 34, 35, 41, 42], "decod": [24, 25, 26, 28, 31, 32, 34, 36, 37, 38, 41], "accord": [24, 38], "kei": [24, 40], "associ": [24, 27, 28, 33, 34, 41], "final": 24, "etc": 24, "note": 24, "close": [24, 35, 42], "underli": [24, 28, 34, 41], "regist": [24, 35, 42], "numer": 24, "see": [24, 38], "common": [24, 38], "about": 24, "identifi": 24, "empti": 24, "conform": [24, 34, 41], "python": [24, 47], "requir": [24, 47], "field": [24, 43], "throughout": 24, "user_data": 24, "free": 24, "form": 24, "specifi": [24, 35, 42], "its": [24, 27, 33, 38], "version": 24, "other": [24, 28, 34, 41], "inform": 24, "debug": 24, "mcapprotobufdecodeerror": [25, 26, 27], "mcapprotobufmessag": [25, 26, 28], "read_protobuf_messag": [25, 26, 28, 43], "build_file_descriptor_set": [25, 26, 29], "write_messag": [26, 30, 32, 35, 37, 42, 43, 45, 47], "take": [27, 33], "mcap": [27, 28, 30, 33, 34, 35, 39, 41, 42, 43, 44, 47], "along": [27, 33, 46, 47], "within": [27, 33], "rais": [27, 33, 39, 42, 46], "could": [27, 33, 39], "given": [27, 33, 38, 39, 42, 47], "cannot": [27, 33, 39, 42], "capabl": [28, 34, 41], "For": [28, 34, 41], "more": [28, 34, 38, 41], "low": [28, 34, 41], "control": [28, 34, 41], "consid": [28, 34, 41], "directli": [28, 34, 41], "proto_msg": [28, 43], "singl": [28, 34, 41], "variabl": [28, 34, 41], "sequence_count": [28, 32, 34, 37, 41], "otherwis": [28, 34, 41], "channel_metadata": [28, 32, 34], "log_time_n": [28, 32, 34, 37, 41], "posix": [28, 34, 41], "datetim": [28, 34, 41], "repres": [28, 34, 38, 41], "pathlik": [28, 34, 41], "gener": [28, 34, 41], "some": [28, 34, 41], "suppli": [28, 34, 41, 47], "instanc": [28, 34, 41, 47], "path": [28, 34, 41, 46], "filesystem": [28, 34, 41], "each": [28, 34, 38, 41], "assum": [28, 34, 41], "function": [28, 34, 40, 41], "your": [28, 34, 41, 46], "message_class": 29, "filedescriptorset": 29, "higher": 30, "origin": 30, "unix": [30, 35, 42], "written": 30, "mcapros1decodeerror": [31, 32, 33, 39], "mcapros1messag": [31, 32, 34, 41], "read_ros1_messag": [31, 32, 34, 45], "publish_time_n": [32, 34, 37, 41], "ros_msg": [32, 34, 37, 41, 45, 47], "call": [35, 42], "automat": [35, 42], "Will": [35, 42], "default": [35, 42], "number": [35, 38, 42], "cdrreader": [36, 37, 38], "cdrwriter": [36, 37, 38], "encapsulationkind": [36, 37, 38], "pack_float32b": [36, 37, 38], "pack_float32l": [36, 37, 38], "pack_float64b": [36, 37, 38], "pack_float64l": [36, 37, 38], "pack_int16b": [36, 37, 38], "pack_int16l": [36, 37, 38], "pack_int32b": [36, 37, 38], "pack_int32l": [36, 37, 38], "pack_int64b": [36, 37, 38], "pack_int64l": [36, 37, 38], "pack_int8": [36, 37, 38], "pack_uint16b": [36, 37, 38], "pack_uint16l": [36, 37, 38], "pack_uint32b": [36, 37, 38], "pack_uint32l": [36, 37, 38], "pack_uint64b": [36, 37, 38], "pack_uint64l": [36, 37, 38], "pack_uint8": [36, 37, 38], "unpack_float32b": [36, 37, 38], "unpack_float32l": [36, 37, 38], "unpack_float64b": [36, 37, 38], "unpack_float64l": [36, 37, 38], "unpack_int16b": [36, 37, 38], "unpack_int16l": [36, 37, 38], "unpack_int32b": [36, 37, 38], "unpack_int32l": [36, 37, 38], "unpack_int64b": [36, 37, 38], "unpack_int64l": [36, 37, 38], "unpack_int8": [36, 37, 38], "unpack_uint16b": [36, 37, 38], "unpack_uint16l": [36, 37, 38], "unpack_uint32b": [36, 37, 38], "unpack_uint32l": [36, 37, 38], "unpack_uint64b": [36, 37, 38], "unpack_uint64l": [36, 37, 38], "unpack_uint8": [36, 37, 38], "mcapros2decodeerror": [36, 37, 39], "dynam": [36, 37], "encode_messag": [36, 37, 40], "generate_dynam": [36, 37, 40], "read_messag": [36, 37, 40, 46], "serialize_dynam": [36, 37, 40], "mcapros2messag": [36, 37, 41], "read_ros2_messag": [36, 37, 41, 47], "mcapros2writeerror": [36, 37, 42], "boolean": [37, 38], "boolean_arrai": [37, 38], "byte_length": [37, 38], "decoded_byt": [37, 38], "float32": [37, 38], "float32_arrai": [37, 38], "float64": [37, 38, 47], "float64_arrai": [37, 38], "int16": [37, 38], "int16_arrai": [37, 38], "int32": [37, 38], "int32_arrai": [37, 38], "int64": [37, 38], "int64_arrai": [37, 38], "int8": [37, 38], "int8_arrai": [37, 38], "kind": [37, 38], "little_endian": [37, 38], "seek": [37, 38], "seek_to": [37, 38], "sequence_length": [37, 38], "string_arrai": [37, 38], "string_raw": [37, 38], "uint16": [37, 38], "uint16b": [37, 38], "uint16_arrai": [37, 38], "uint32": [37, 38], "uint32b": [37, 38], "uint32_arrai": [37, 38], "uint64": [37, 38], "uint64b": [37, 38], "uint64_arrai": [37, 38], "uint8": [37, 38], "uint8_arrai": [37, 38], "write_boolean": [37, 38], "write_boolean_arrai": [37, 38], "write_byt": [37, 38], "write_float32": [37, 38], "write_float32_arrai": [37, 38], "write_float64": [37, 38], "write_float64_arrai": [37, 38], "write_int16": [37, 38], "write_int16_arrai": [37, 38], "write_int32": [37, 38], "write_int32_arrai": [37, 38], "write_int64": [37, 38], "write_int64_arrai": [37, 38], "write_int8": [37, 38], "write_int8_arrai": [37, 38], "write_str": [37, 38], "write_string_arrai": [37, 38], "write_uint16": [37, 38], "write_uint16b": [37, 38], "write_uint16_arrai": [37, 38], "write_uint32": [37, 38], "write_uint32b": [37, 38], "write_uint32_arrai": [37, 38], "write_uint64": [37, 38], "write_uint64b": [37, 38], "write_uint64_arrai": [37, 38], "write_uint8": [37, 38], "write_uint8_arrai": [37, 38], "cdr_be": [37, 38], "cdr_le": [37, 38], "pl_cdr_be": [37, 38], "pl_cdr_le": [37, 38], "register_msgdef": [37, 42, 47], "represent": 38, "pars": [38, 40], "bit": 38, "interpret": 38, "arrai": 38, "have": 38, "been": 38, "float": 38, "32": 38, "point": 38, "64": 38, "sign": 38, "encapsul": 38, "relative_offset": 38, "rel": 38, "posit": 38, "absolut": 38, "unsign": 38, "prefix": 38, "big": 38, "endian": 38, "binaryio": 38, "": 38, "pack": 38, "v1": 38, "v2": 38, "help": [38, 46], "struct": 38, "buffer": 38, "unpack": 38, "size": 38, "least": 38, "simplenamespac": [39, 40], "definit": [40, 42, 47], "deseri": 40, "schema_nam": [40, 47], "msgdef": 40, "messagespecif": 40, "ros2_msg": 40, "payload": 40, "exist": 40, "dictionari": 40, "top": 40, "nest": 40, "schema_text": [40, 47], "callabl": 40, "convert": 40, "concaten": [40, 47], "parser": [40, 46], "model": 40, "genpi": 40, "defin": 40, "map": 40, "referenc": 41, "datatyp": [42, 47], "msgdef_text": 42, "import": [43, 44, 45, 46, 47], "sy": [43, 44, 45, 47], "def": [43, 45, 46, 47], "main": [43, 45, 46, 47], "msg": [43, 45, 46, 47], "argv": [43, 44, 45, 47], "print": [43, 44, 45, 46, 47], "f": [43, 44, 45, 46, 47], "__name__": [43, 45, 46, 47], "__main__": [43, 45, 46, 47], "complex_message_pb2": 43, "complexmessag": 43, "simple_message_pb2": 43, "simplemessag": 43, "open": [43, 44, 45, 46, 47], "wb": [43, 44, 45, 47], "mcap_writ": 43, "rang": [43, 45, 46, 47], "simple_messag": 43, "hello": 43, "world": 43, "1000": 43, "complex_messag": 43, "fielda": 43, "fieldb": 43, "b": 43, "rb": 44, "diagnost": 44, "time_n": 44, "sampl": 44, "dump": 44, "sample_top": 44, "test": 44, "utf": 44, "std_msg": [45, 46, 47], "ros_writ": 45, "chatter": [45, 46], "can": [46, 47], "storag": [46, 47], "plugin": [46, 47], "interact": [46, 47], "get": 46, "ll": 46, "instal": [46, 47], "follow": 46, "distribut": 46, "ros_distro": 46, "ros2bag": 46, "rosbag2": 46, "transport": 46, "script": 46, "api": 46, "argpars": 46, "rclpy": 46, "serialize_messag": 46, "topic_nam": 46, "write_to": 46, "output_path": 46, "sequentialwrit": 46, "storageopt": 46, "uri": 46, "storage_id": 46, "converteropt": 46, "input_serialization_format": 46, "output_serialization_format": 46, "create_top": 46, "topicmetadata": 46, "serialization_format": 46, "100": 46, "del": 46, "argumentpars": 46, "descript": 46, "__doc__": 46, "add_argu": 46, "directori": 46, "arg": 46, "parse_arg": 46, "bag": 46, "deserialize_messag": 46, "rosidl_runtime_pi": 46, "util": 46, "get_messag": 46, "input_bag": 46, "sequentialread": 46, "topic_typ": 46, "get_all_topics_and_typ": 46, "typenam": 46, "valueerror": 46, "has_next": 46, "read_next": 46, "msg_type": 46, "folder": 46, "filepath": 46, "These": 47, "exampl": 47, "demonstr": 47, "without": 47, "howev": 47, "correct": 47, "_type": 47, "__class__": 47, "_full_text": 47, "altern": 47, "environ": 47, "mcapwrit": 47, "In": 47, "access": 47, "we": 47, "hardcod": 47, "here": 47, "avoid": 47, "tf2_msg": 47, "tfmessag": 47, "geometry_msg": 47, "transformstamp": 47, "transform": 47, "child_frame_id": 47, "frame": 47, "child": 47, "builtin_interfac": 47, "stamp": 47, "frame_id": 47, "vector3": 47, "translat": 47, "quaternion": 47, "rotat": 47, "x": 47, "y": 47, "z": 47, "w": 47, "tf": 47, "sec": 47, "nanosec": 47, "parent_fram": 47, "child_fram": 47, "simpl": 47, "them": 47}, "objects": {"": [[2, 0, 0, "-", "mcap"], [26, 0, 0, "-", "mcap_protobuf"], [32, 0, 0, "-", "mcap_ros1"], [37, 0, 0, "-", "mcap_ros2"]], "mcap": [[3, 0, 0, "-", "chunk_builder"], [4, 0, 0, "-", "data_stream"], [5, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "mcap0"], [16, 0, 0, "-", "message_queue"], [17, 0, 0, "-", "opcode"], [18, 0, 0, "-", "reader"], [19, 0, 0, "-", "records"], [20, 0, 0, "-", "serialization"], [21, 0, 0, "-", "stream_reader"], [22, 0, 0, "-", "summary"], [23, 0, 0, "-", "well_known"], [24, 0, 0, "-", "writer"]], "mcap.chunk_builder": [[3, 1, 1, "", "ChunkBuilder"]], "mcap.chunk_builder.ChunkBuilder": [[3, 2, 1, "", "add_channel"], [3, 2, 1, "", "add_message"], [3, 2, 1, "", "add_schema"], [3, 3, 1, "", "count"], [3, 2, 1, "", "end"], [3, 2, 1, "", "reset"]], "mcap.data_stream": [[4, 1, 1, "", "ReadDataStream"], [4, 1, 1, "", "RecordBuilder"]], "mcap.data_stream.ReadDataStream": [[4, 2, 1, "", "checksum"], [4, 3, 1, "", "count"], [4, 2, 1, "", "read"], [4, 2, 1, "", "read1"], [4, 2, 1, "", "read2"], [4, 2, 1, "", "read4"], [4, 2, 1, "", "read8"], [4, 2, 1, "", "read_prefixed_string"]], "mcap.data_stream.RecordBuilder": [[4, 3, 1, "", "count"], [4, 2, 1, "", "end"], [4, 2, 1, "", "finish_record"], [4, 2, 1, "", "start_record"], [4, 2, 1, "", "write"], [4, 2, 1, "", "write1"], [4, 2, 1, "", "write2"], [4, 2, 1, "", "write4"], [4, 2, 1, "", "write8"], [4, 2, 1, "", "write_prefixed_string"]], "mcap.exceptions": [[5, 4, 1, "", "EndOfFile"], [5, 4, 1, "", "InvalidMagic"], [5, 4, 1, "", "McapError"]], "mcap.mcap0": [[7, 0, 0, "-", "exceptions"], [8, 0, 0, "-", "message_queue"], [9, 0, 0, "-", "reader"], [10, 0, 0, "-", "records"], [11, 0, 0, "-", "serialization"], [12, 0, 0, "-", "stream_reader"], [13, 0, 0, "-", "warning"], [14, 0, 0, "-", "well_known"], [15, 0, 0, "-", "writer"]], "mcap.mcap0.warning": [[13, 5, 1, "", "deprecation_notice"]], "mcap.message_queue": [[16, 1, 1, "", "MessageQueue"]], "mcap.message_queue.MessageQueue": [[16, 2, 1, "", "pop"], [16, 2, 1, "", "push"]], "mcap.opcode": [[17, 1, 1, "", "Opcode"]], "mcap.opcode.Opcode": [[17, 6, 1, "", "ATTACHMENT"], [17, 6, 1, "", "ATTACHMENT_INDEX"], [17, 6, 1, "", "CHANNEL"], [17, 6, 1, "", "CHUNK"], [17, 6, 1, "", "CHUNK_INDEX"], [17, 6, 1, "", "DATA_END"], [17, 6, 1, "", "FOOTER"], [17, 6, 1, "", "HEADER"], [17, 6, 1, "", "MESSAGE"], [17, 6, 1, "", "MESSAGE_INDEX"], [17, 6, 1, "", "METADATA"], [17, 6, 1, "", "METADATA_INDEX"], [17, 6, 1, "", "SCHEMA"], [17, 6, 1, "", "STATISTICS"], [17, 6, 1, "", "SUMMARY_OFFSET"]], "mcap.reader": [[18, 1, 1, "", "McapReader"], [18, 1, 1, "", "NonSeekingReader"], [18, 1, 1, "", "SeekingReader"], [18, 5, 1, "", "make_reader"]], "mcap.reader.McapReader": [[18, 2, 1, "", "get_header"], [18, 2, 1, "", "get_summary"], [18, 2, 1, "", "iter_attachments"], [18, 2, 1, "", "iter_messages"], [18, 2, 1, "", "iter_metadata"]], "mcap.reader.NonSeekingReader": [[18, 2, 1, "", "get_header"], [18, 2, 1, "", "get_summary"], [18, 2, 1, "", "iter_attachments"], [18, 2, 1, "", "iter_messages"], [18, 2, 1, "", "iter_metadata"]], "mcap.reader.SeekingReader": [[18, 2, 1, "", "get_header"], [18, 2, 1, "", "get_summary"], [18, 2, 1, "", "iter_attachments"], [18, 2, 1, "", "iter_messages"], [18, 2, 1, "", "iter_metadata"]], "mcap.records": [[19, 1, 1, "", "Attachment"], [19, 1, 1, "", "AttachmentIndex"], [19, 1, 1, "", "Channel"], [19, 1, 1, "", "Chunk"], [19, 1, 1, "", "ChunkIndex"], [19, 1, 1, "", "DataEnd"], [19, 1, 1, "", "Footer"], [19, 1, 1, "", "Header"], [19, 1, 1, "", "McapRecord"], [19, 1, 1, "", "Message"], [19, 1, 1, "", "MessageIndex"], [19, 1, 1, "", "Metadata"], [19, 1, 1, "", "MetadataIndex"], [19, 1, 1, "", "Schema"], [19, 1, 1, "", "Statistics"], [19, 1, 1, "", "SummaryOffset"]], "mcap.records.Attachment": [[19, 6, 1, "", "create_time"], [19, 6, 1, "", "data"], [19, 6, 1, "", "log_time"], [19, 6, 1, "", "media_type"], [19, 6, 1, "", "name"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.AttachmentIndex": [[19, 6, 1, "", "create_time"], [19, 6, 1, "", "data_size"], [19, 6, 1, "", "length"], [19, 6, 1, "", "log_time"], [19, 6, 1, "", "media_type"], [19, 6, 1, "", "name"], [19, 6, 1, "", "offset"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.Channel": [[19, 6, 1, "", "id"], [19, 6, 1, "", "message_encoding"], [19, 6, 1, "", "metadata"], [19, 2, 1, "", "read"], [19, 6, 1, "", "schema_id"], [19, 6, 1, "", "topic"], [19, 2, 1, "", "write"]], "mcap.records.Chunk": [[19, 6, 1, "", "compression"], [19, 6, 1, "", "data"], [19, 6, 1, "", "message_end_time"], [19, 6, 1, "", "message_start_time"], [19, 2, 1, "", "read"], [19, 6, 1, "", "uncompressed_crc"], [19, 6, 1, "", "uncompressed_size"], [19, 2, 1, "", "write"]], "mcap.records.ChunkIndex": [[19, 6, 1, "", "chunk_length"], [19, 6, 1, "", "chunk_start_offset"], [19, 6, 1, "", "compressed_size"], [19, 6, 1, "", "compression"], [19, 6, 1, "", "message_end_time"], [19, 6, 1, "", "message_index_length"], [19, 6, 1, "", "message_index_offsets"], [19, 6, 1, "", "message_start_time"], [19, 2, 1, "", "read"], [19, 6, 1, "", "uncompressed_size"], [19, 2, 1, "", "write"]], "mcap.records.DataEnd": [[19, 6, 1, "", "data_section_crc"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.Footer": [[19, 2, 1, "", "read"], [19, 6, 1, "", "summary_crc"], [19, 6, 1, "", "summary_offset_start"], [19, 6, 1, "", "summary_start"], [19, 2, 1, "", "write"]], "mcap.records.Header": [[19, 6, 1, "", "library"], [19, 6, 1, "", "profile"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.McapRecord": [[19, 2, 1, "", "write"]], "mcap.records.Message": [[19, 6, 1, "", "channel_id"], [19, 6, 1, "", "data"], [19, 6, 1, "", "log_time"], [19, 6, 1, "", "publish_time"], [19, 2, 1, "", "read"], [19, 6, 1, "", "sequence"], [19, 2, 1, "", "write"]], "mcap.records.MessageIndex": [[19, 6, 1, "", "channel_id"], [19, 2, 1, "", "read"], [19, 6, 1, "", "records"], [19, 2, 1, "", "write"]], "mcap.records.Metadata": [[19, 6, 1, "", "metadata"], [19, 6, 1, "", "name"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.MetadataIndex": [[19, 6, 1, "", "length"], [19, 6, 1, "", "name"], [19, 6, 1, "", "offset"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.Schema": [[19, 6, 1, "", "data"], [19, 6, 1, "", "encoding"], [19, 6, 1, "", "id"], [19, 6, 1, "", "name"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.records.Statistics": [[19, 6, 1, "", "attachment_count"], [19, 6, 1, "", "channel_count"], [19, 6, 1, "", "channel_message_counts"], [19, 6, 1, "", "chunk_count"], [19, 6, 1, "", "message_count"], [19, 6, 1, "", "message_end_time"], [19, 6, 1, "", "message_start_time"], [19, 6, 1, "", "metadata_count"], [19, 2, 1, "", "read"], [19, 6, 1, "", "schema_count"], [19, 2, 1, "", "write"]], "mcap.records.SummaryOffset": [[19, 6, 1, "", "group_length"], [19, 6, 1, "", "group_opcode"], [19, 6, 1, "", "group_start"], [19, 2, 1, "", "read"], [19, 2, 1, "", "write"]], "mcap.serialization": [[20, 5, 1, "", "normalize_value"], [20, 5, 1, "", "stringify_record"]], "mcap.stream_reader": [[21, 1, 1, "", "StreamReader"]], "mcap.stream_reader.StreamReader": [[21, 3, 1, "", "records"]], "mcap.summary": [[22, 1, 1, "", "Summary"]], "mcap.well_known": [[23, 1, 1, "", "MessageEncoding"], [23, 1, 1, "", "Profile"], [23, 1, 1, "", "SchemaEncoding"]], "mcap.well_known.MessageEncoding": [[23, 6, 1, "", "CBOR"], [23, 6, 1, "", "CDR"], [23, 6, 1, "", "Flatbuffer"], [23, 6, 1, "", "JSON"], [23, 6, 1, "", "Protobuf"], [23, 6, 1, "", "ROS1"]], "mcap.well_known.Profile": [[23, 6, 1, "", "ROS1"], [23, 6, 1, "", "ROS2"]], "mcap.well_known.SchemaEncoding": [[23, 6, 1, "", "Flatbuffer"], [23, 6, 1, "", "JSONSchema"], [23, 6, 1, "", "Protobuf"], [23, 6, 1, "", "ROS1"], [23, 6, 1, "", "ROS2"], [23, 6, 1, "", "ROS2IDL"], [23, 6, 1, "", "SelfDescribing"]], "mcap.writer": [[24, 1, 1, "", "CompressionType"], [24, 1, 1, "", "IndexType"], [24, 1, 1, "", "Writer"]], "mcap.writer.CompressionType": [[24, 6, 1, "", "LZ4"], [24, 6, 1, "", "NONE"], [24, 6, 1, "", "ZSTD"]], "mcap.writer.IndexType": [[24, 6, 1, "", "ALL"], [24, 6, 1, "", "ATTACHMENT"], [24, 6, 1, "", "CHUNK"], [24, 6, 1, "", "MESSAGE"], [24, 6, 1, "", "METADATA"], [24, 6, 1, "", "NONE"]], "mcap.writer.Writer": [[24, 2, 1, "", "add_attachment"], [24, 2, 1, "", "add_message"], [24, 2, 1, "", "add_metadata"], [24, 2, 1, "", "finish"], [24, 2, 1, "", "register_channel"], [24, 2, 1, "", "register_schema"], [24, 2, 1, "", "start"]], "mcap_protobuf": [[27, 0, 0, "-", "decoder"], [28, 0, 0, "-", "reader"], [29, 0, 0, "-", "schema"], [30, 0, 0, "-", "writer"]], "mcap_protobuf.decoder": [[27, 1, 1, "", "Decoder"], [27, 4, 1, "", "McapProtobufDecodeError"]], "mcap_protobuf.decoder.Decoder": [[27, 2, 1, "", "decode"]], "mcap_protobuf.reader": [[28, 1, 1, "", "McapProtobufMessage"], [28, 5, 1, "", "read_protobuf_messages"]], "mcap_protobuf.reader.McapProtobufMessage": [[28, 3, 1, "", "log_time"], [28, 3, 1, "", "publish_time"]], "mcap_protobuf.schema": [[29, 5, 1, "", "build_file_descriptor_set"], [29, 5, 1, "", "register_schema"]], "mcap_protobuf.writer": [[30, 1, 1, "", "Writer"]], "mcap_protobuf.writer.Writer": [[30, 2, 1, "", "finish"], [30, 2, 1, "", "write_message"]], "mcap_ros1": [[33, 0, 0, "-", "decoder"], [34, 0, 0, "-", "reader"], [35, 0, 0, "-", "writer"]], "mcap_ros1.decoder": [[33, 1, 1, "", "Decoder"], [33, 4, 1, "", "McapROS1DecodeError"]], "mcap_ros1.decoder.Decoder": [[33, 2, 1, "", "decode"]], "mcap_ros1.reader": [[34, 1, 1, "", "McapROS1Message"], [34, 5, 1, "", "read_ros1_messages"]], "mcap_ros1.reader.McapROS1Message": [[34, 6, 1, "", "channel"], [34, 6, 1, "", "channel_metadata"], [34, 3, 1, "", "log_time"], [34, 6, 1, "", "log_time_ns"], [34, 3, 1, "", "publish_time"], [34, 6, 1, "", "publish_time_ns"], [34, 6, 1, "", "ros_msg"], [34, 6, 1, "", "schema"], [34, 6, 1, "", "sequence_count"], [34, 6, 1, "", "topic"]], "mcap_ros1.writer": [[35, 1, 1, "", "Writer"]], "mcap_ros1.writer.Writer": [[35, 2, 1, "", "finish"], [35, 2, 1, "", "write_message"]], "mcap_ros2": [[38, 0, 0, "-", "cdr"], [39, 0, 0, "-", "decoder"], [40, 0, 0, "-", "dynamic"], [41, 0, 0, "-", "reader"], [42, 0, 0, "-", "writer"]], "mcap_ros2.cdr": [[38, 1, 1, "", "CdrReader"], [38, 1, 1, "", "CdrWriter"], [38, 1, 1, "", "EncapsulationKind"], [38, 5, 1, "", "pack_float32be"], [38, 5, 1, "", "pack_float32le"], [38, 5, 1, "", "pack_float64be"], [38, 5, 1, "", "pack_float64le"], [38, 5, 1, "", "pack_int16be"], [38, 5, 1, "", "pack_int16le"], [38, 5, 1, "", "pack_int32be"], [38, 5, 1, "", "pack_int32le"], [38, 5, 1, "", "pack_int64be"], [38, 5, 1, "", "pack_int64le"], [38, 5, 1, "", "pack_int8"], [38, 5, 1, "", "pack_uint16be"], [38, 5, 1, "", "pack_uint16le"], [38, 5, 1, "", "pack_uint32be"], [38, 5, 1, "", "pack_uint32le"], [38, 5, 1, "", "pack_uint64be"], [38, 5, 1, "", "pack_uint64le"], [38, 5, 1, "", "pack_uint8"], [38, 5, 1, "", "unpack_float32be"], [38, 5, 1, "", "unpack_float32le"], [38, 5, 1, "", "unpack_float64be"], [38, 5, 1, "", "unpack_float64le"], [38, 5, 1, "", "unpack_int16be"], [38, 5, 1, "", "unpack_int16le"], [38, 5, 1, "", "unpack_int32be"], [38, 5, 1, "", "unpack_int32le"], [38, 5, 1, "", "unpack_int64be"], [38, 5, 1, "", "unpack_int64le"], [38, 5, 1, "", "unpack_int8"], [38, 5, 1, "", "unpack_uint16be"], [38, 5, 1, "", "unpack_uint16le"], [38, 5, 1, "", "unpack_uint32be"], [38, 5, 1, "", "unpack_uint32le"], [38, 5, 1, "", "unpack_uint64be"], [38, 5, 1, "", "unpack_uint64le"], [38, 5, 1, "", "unpack_uint8"]], "mcap_ros2.cdr.CdrReader": [[38, 2, 1, "", "boolean"], [38, 2, 1, "", "boolean_array"], [38, 2, 1, "", "byte_length"], [38, 6, 1, "", "data"], [38, 2, 1, "", "decoded_bytes"], [38, 2, 1, "", "float32"], [38, 2, 1, "", "float32_array"], [38, 2, 1, "", "float64"], [38, 2, 1, "", "float64_array"], [38, 2, 1, "", "int16"], [38, 2, 1, "", "int16_array"], [38, 2, 1, "", "int32"], [38, 2, 1, "", "int32_array"], [38, 2, 1, "", "int64"], [38, 2, 1, "", "int64_array"], [38, 2, 1, "", "int8"], [38, 2, 1, "", "int8_array"], [38, 2, 1, "", "kind"], [38, 6, 1, "", "little_endian"], [38, 6, 1, "", "offset"], [38, 2, 1, "", "seek"], [38, 2, 1, "", "seek_to"], [38, 2, 1, "", "sequence_length"], [38, 2, 1, "", "string"], [38, 2, 1, "", "string_array"], [38, 2, 1, "", "string_raw"], [38, 2, 1, "", "uint16"], [38, 2, 1, "", "uint16BE"], [38, 2, 1, "", "uint16_array"], [38, 2, 1, "", "uint32"], [38, 2, 1, "", "uint32BE"], [38, 2, 1, "", "uint32_array"], [38, 2, 1, "", "uint64"], [38, 2, 1, "", "uint64BE"], [38, 2, 1, "", "uint64_array"], [38, 2, 1, "", "uint8"], [38, 2, 1, "", "uint8_array"]], "mcap_ros2.cdr.CdrWriter": [[38, 6, 1, "", "little_endian"], [38, 6, 1, "", "offset"], [38, 6, 1, "", "output"], [38, 2, 1, "", "write_boolean"], [38, 2, 1, "", "write_boolean_array"], [38, 2, 1, "", "write_bytes"], [38, 2, 1, "", "write_float32"], [38, 2, 1, "", "write_float32_array"], [38, 2, 1, "", "write_float64"], [38, 2, 1, "", "write_float64_array"], [38, 2, 1, "", "write_int16"], [38, 2, 1, "", "write_int16_array"], [38, 2, 1, "", "write_int32"], [38, 2, 1, "", "write_int32_array"], [38, 2, 1, "", "write_int64"], [38, 2, 1, "", "write_int64_array"], [38, 2, 1, "", "write_int8"], [38, 2, 1, "", "write_int8_array"], [38, 2, 1, "", "write_string"], [38, 2, 1, "", "write_string_array"], [38, 2, 1, "", "write_uint16"], [38, 2, 1, "", "write_uint16BE"], [38, 2, 1, "", "write_uint16_array"], [38, 2, 1, "", "write_uint32"], [38, 2, 1, "", "write_uint32BE"], [38, 2, 1, "", "write_uint32_array"], [38, 2, 1, "", "write_uint64"], [38, 2, 1, "", "write_uint64BE"], [38, 2, 1, "", "write_uint64_array"], [38, 2, 1, "", "write_uint8"], [38, 2, 1, "", "write_uint8_array"]], "mcap_ros2.cdr.EncapsulationKind": [[38, 6, 1, "", "CDR_BE"], [38, 6, 1, "", "CDR_LE"], [38, 6, 1, "", "PL_CDR_BE"], [38, 6, 1, "", "PL_CDR_LE"]], "mcap_ros2.decoder": [[39, 1, 1, "", "Decoder"], [39, 4, 1, "", "McapROS2DecodeError"]], "mcap_ros2.decoder.Decoder": [[39, 2, 1, "", "decode"]], "mcap_ros2.dynamic": [[40, 5, 1, "", "encode_message"], [40, 5, 1, "", "generate_dynamic"], [40, 5, 1, "", "read_message"], [40, 5, 1, "", "serialize_dynamic"]], "mcap_ros2.reader": [[41, 1, 1, "", "McapROS2Message"], [41, 5, 1, "", "read_ros2_messages"]], "mcap_ros2.reader.McapROS2Message": [[41, 6, 1, "", "channel"], [41, 3, 1, "", "log_time"], [41, 6, 1, "", "log_time_ns"], [41, 3, 1, "", "publish_time"], [41, 6, 1, "", "publish_time_ns"], [41, 6, 1, "", "ros_msg"], [41, 6, 1, "", "schema"], [41, 6, 1, "", "sequence_count"]], "mcap_ros2.writer": [[42, 4, 1, "", "McapROS2WriteError"], [42, 1, 1, "", "Writer"]], "mcap_ros2.writer.Writer": [[42, 2, 1, "", "finish"], [42, 2, 1, "", "register_msgdef"], [42, 2, 1, "", "write_message"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:exception", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"mcap": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 46], "python": 0, "librari": 0, "usag": 0, "exampl": [0, 43, 45], "api": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [2, 6, 26, 32, 37], "subpackag": 2, "submodul": [2, 6, 26, 32, 37], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42], "content": [2, 6, 26, 32, 37], "chunk_build": 3, "data_stream": 4, "except": [5, 7], "mcap0": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "message_queu": [8, 16], "reader": [9, 18, 28, 34, 41, 43, 45], "record": [10, 19], "serial": [11, 20], "stream_read": [12, 21], "warn": 13, "well_known": [14, 23], "writer": [15, 24, 30, 35, 42, 43, 45], "opcod": 17, "summari": 22, "mcap_protobuf": [25, 26, 27, 28, 29, 30], "decod": [27, 33, 39], "schema": 29, "mcap_ros1": [31, 32, 33, 34, 35], "mcap_ros2": [36, 37, 38, 39, 40, 41, 42], "cdr": 38, "dynam": 40, "work": [43, 45, 47], "protobuf": 43, "messag": [43, 44, 45, 46, 47], "basic": 44, "read": [44, 46, 47], "write": [44, 46, 47], "ro": [45, 46, 47], "1": 45, "us": 46, "rosbag2_pi": 46, "2": [46, 47], "workspac": 46, "setup": 46}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"MCAP Python Library": [[0, "mcap-python-library"]], "Usage Examples": [[0, "usage-examples"]], "API Documentation": [[0, "api-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "mcap": [[1, "mcap"]], "mcap package": [[2, "mcap-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [6, "submodules"], [26, "submodules"], [32, "submodules"], [37, "submodules"]], "Module contents": [[2, "module-mcap"], [6, "module-mcap.mcap0"], [26, "module-mcap_protobuf"], [32, "module-mcap_ros1"], [37, "module-mcap_ros2"]], "mcap.chunk_builder module": [[3, "module-mcap.chunk_builder"]], "mcap.data_stream module": [[4, "module-mcap.data_stream"]], "mcap.exceptions module": [[5, "module-mcap.exceptions"]], "mcap.mcap0 package": [[6, "mcap-mcap0-package"]], "mcap.mcap0.exceptions module": [[7, "module-mcap.mcap0.exceptions"]], "mcap.mcap0.message_queue module": [[8, "module-mcap.mcap0.message_queue"]], "mcap.mcap0.reader module": [[9, "module-mcap.mcap0.reader"]], "mcap.mcap0.records module": [[10, "module-mcap.mcap0.records"]], "mcap.mcap0.serialization module": [[11, "module-mcap.mcap0.serialization"]], "mcap.mcap0.stream_reader module": [[12, "module-mcap.mcap0.stream_reader"]], "mcap.mcap0.warning module": [[13, "module-mcap.mcap0.warning"]], "mcap.mcap0.well_known module": [[14, "module-mcap.mcap0.well_known"]], "mcap.mcap0.writer module": [[15, "module-mcap.mcap0.writer"]], "mcap.message_queue module": [[16, "module-mcap.message_queue"]], "mcap.opcode module": [[17, "module-mcap.opcode"]], "mcap.reader module": [[18, "module-mcap.reader"]], "mcap.records module": [[19, "module-mcap.records"]], "mcap.serialization module": [[20, "module-mcap.serialization"]], "mcap.stream_reader module": [[21, "module-mcap.stream_reader"]], "mcap.summary module": [[22, "module-mcap.summary"]], "mcap.well_known module": [[23, "module-mcap.well_known"]], "mcap.writer module": [[24, "module-mcap.writer"]], "mcap_protobuf": [[25, "mcap-protobuf"]], "mcap_protobuf package": [[26, "mcap-protobuf-package"]], "mcap_protobuf.decoder module": [[27, "module-mcap_protobuf.decoder"]], "mcap_protobuf.reader module": [[28, "module-mcap_protobuf.reader"]], "mcap_protobuf.schema module": [[29, "module-mcap_protobuf.schema"]], "mcap_protobuf.writer module": [[30, "module-mcap_protobuf.writer"]], "mcap_ros1": [[31, "mcap-ros1"]], "mcap_ros1 package": [[32, "mcap-ros1-package"]], "mcap_ros1.decoder module": [[33, "module-mcap_ros1.decoder"]], "mcap_ros1.reader module": [[34, "module-mcap_ros1.reader"]], "mcap_ros1.writer module": [[35, "module-mcap_ros1.writer"]], "mcap_ros2": [[36, "mcap-ros2"]], "mcap_ros2 package": [[37, "mcap-ros2-package"]], "mcap_ros2.cdr module": [[38, "module-mcap_ros2.cdr"]], "mcap_ros2.decoder module": [[39, "module-mcap_ros2.decoder"]], "mcap_ros2.dynamic module": [[40, "module-mcap_ros2.dynamic"]], "mcap_ros2.reader module": [[41, "module-mcap_ros2.reader"]], "mcap_ros2.writer module": [[42, "module-mcap_ros2.writer"]], "Working with Protobuf Messages": [[43, "working-with-protobuf-messages"]], "Reader Example": [[43, "reader-example"], [45, "reader-example"]], "Writer Example": [[43, "writer-example"], [45, "writer-example"]], "Basic Reading and Writing": [[44, "basic-reading-and-writing"]], "Reading messages": [[44, "reading-messages"]], "Writing messages": [[44, "writing-messages"]], "Working with ROS 1 Messages": [[45, "working-with-ros-1-messages"]], "Using rosbag2_py to use MCAP with ROS 2": [[46, "using-rosbag2-py-to-use-mcap-with-ros-2"]], "Workspace Setup": [[46, "workspace-setup"]], "Writing Messages": [[46, "writing-messages"], [47, "writing-messages"]], "Reading Messages": [[46, "reading-messages"], [47, "reading-messages"]], "Working with ROS 2 Messages": [[47, "working-with-ros-2-messages"]]}, "indexentries": {"mcap": [[2, "module-mcap"]], "module": [[2, "module-mcap"], [3, "module-mcap.chunk_builder"], [4, "module-mcap.data_stream"], [5, "module-mcap.exceptions"], [6, "module-mcap.mcap0"], [7, "module-mcap.mcap0.exceptions"], [8, "module-mcap.mcap0.message_queue"], [9, "module-mcap.mcap0.reader"], [10, "module-mcap.mcap0.records"], [11, "module-mcap.mcap0.serialization"], [12, "module-mcap.mcap0.stream_reader"], [13, "module-mcap.mcap0.warning"], [14, "module-mcap.mcap0.well_known"], [15, "module-mcap.mcap0.writer"], [16, "module-mcap.message_queue"], [17, "module-mcap.opcode"], [18, "module-mcap.reader"], [19, "module-mcap.records"], [20, "module-mcap.serialization"], [21, "module-mcap.stream_reader"], [22, "module-mcap.summary"], [23, "module-mcap.well_known"], [24, "module-mcap.writer"], [26, "module-mcap_protobuf"], [27, "module-mcap_protobuf.decoder"], [28, "module-mcap_protobuf.reader"], [29, "module-mcap_protobuf.schema"], [30, "module-mcap_protobuf.writer"], [32, "module-mcap_ros1"], [33, "module-mcap_ros1.decoder"], [34, "module-mcap_ros1.reader"], [35, "module-mcap_ros1.writer"], [37, "module-mcap_ros2"], [38, "module-mcap_ros2.cdr"], [39, "module-mcap_ros2.decoder"], [40, "module-mcap_ros2.dynamic"], [41, "module-mcap_ros2.reader"], [42, "module-mcap_ros2.writer"]], "chunkbuilder (class in mcap.chunk_builder)": [[3, "mcap.chunk_builder.ChunkBuilder"]], "add_channel() (mcap.chunk_builder.chunkbuilder method)": [[3, "mcap.chunk_builder.ChunkBuilder.add_channel"]], "add_message() (mcap.chunk_builder.chunkbuilder method)": [[3, "mcap.chunk_builder.ChunkBuilder.add_message"]], "add_schema() (mcap.chunk_builder.chunkbuilder method)": [[3, "mcap.chunk_builder.ChunkBuilder.add_schema"]], "count (mcap.chunk_builder.chunkbuilder property)": [[3, "mcap.chunk_builder.ChunkBuilder.count"]], "end() (mcap.chunk_builder.chunkbuilder method)": [[3, "mcap.chunk_builder.ChunkBuilder.end"]], "mcap.chunk_builder": [[3, "module-mcap.chunk_builder"]], "reset() (mcap.chunk_builder.chunkbuilder method)": [[3, "mcap.chunk_builder.ChunkBuilder.reset"]], "readdatastream (class in mcap.data_stream)": [[4, "mcap.data_stream.ReadDataStream"]], "recordbuilder (class in mcap.data_stream)": [[4, "mcap.data_stream.RecordBuilder"]], "checksum() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.checksum"]], "count (mcap.data_stream.readdatastream property)": [[4, "mcap.data_stream.ReadDataStream.count"]], "count (mcap.data_stream.recordbuilder property)": [[4, "mcap.data_stream.RecordBuilder.count"]], "end() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.end"]], "finish_record() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.finish_record"]], "mcap.data_stream": [[4, "module-mcap.data_stream"]], "read() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.read"]], "read1() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.read1"]], "read2() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.read2"]], "read4() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.read4"]], "read8() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.read8"]], "read_prefixed_string() (mcap.data_stream.readdatastream method)": [[4, "mcap.data_stream.ReadDataStream.read_prefixed_string"]], "start_record() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.start_record"]], "write() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.write"]], "write1() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.write1"]], "write2() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.write2"]], "write4() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.write4"]], "write8() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.write8"]], "write_prefixed_string() (mcap.data_stream.recordbuilder method)": [[4, "mcap.data_stream.RecordBuilder.write_prefixed_string"]], "endoffile": [[5, "mcap.exceptions.EndOfFile"]], "invalidmagic": [[5, "mcap.exceptions.InvalidMagic"]], "mcaperror": [[5, "mcap.exceptions.McapError"]], "mcap.exceptions": [[5, "module-mcap.exceptions"]], "mcap.mcap0": [[6, "module-mcap.mcap0"]], "mcap.mcap0.exceptions": [[7, "module-mcap.mcap0.exceptions"]], "mcap.mcap0.message_queue": [[8, "module-mcap.mcap0.message_queue"]], "mcap.mcap0.reader": [[9, "module-mcap.mcap0.reader"]], "mcap.mcap0.records": [[10, "module-mcap.mcap0.records"]], "mcap.mcap0.serialization": [[11, "module-mcap.mcap0.serialization"]], "mcap.mcap0.stream_reader": [[12, "module-mcap.mcap0.stream_reader"]], "deprecation_notice() (in module mcap.mcap0.warning)": [[13, "mcap.mcap0.warning.deprecation_notice"]], "mcap.mcap0.warning": [[13, "module-mcap.mcap0.warning"]], "mcap.mcap0.well_known": [[14, "module-mcap.mcap0.well_known"]], "mcap.mcap0.writer": [[15, "module-mcap.mcap0.writer"]], "messagequeue (class in mcap.message_queue)": [[16, "mcap.message_queue.MessageQueue"]], "mcap.message_queue": [[16, "module-mcap.message_queue"]], "pop() (mcap.message_queue.messagequeue method)": [[16, "mcap.message_queue.MessageQueue.pop"]], "push() (mcap.message_queue.messagequeue method)": [[16, "mcap.message_queue.MessageQueue.push"]], "attachment (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.ATTACHMENT"]], "attachment_index (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.ATTACHMENT_INDEX"]], "channel (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.CHANNEL"]], "chunk (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.CHUNK"]], "chunk_index (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.CHUNK_INDEX"]], "data_end (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.DATA_END"]], "footer (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.FOOTER"]], "header (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.HEADER"]], "message (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.MESSAGE"]], "message_index (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.MESSAGE_INDEX"]], "metadata (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.METADATA"]], "metadata_index (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.METADATA_INDEX"]], "opcode (class in mcap.opcode)": [[17, "mcap.opcode.Opcode"]], "schema (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.SCHEMA"]], "statistics (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.STATISTICS"]], "summary_offset (mcap.opcode.opcode attribute)": [[17, "mcap.opcode.Opcode.SUMMARY_OFFSET"]], "mcap.opcode": [[17, "module-mcap.opcode"]], "mcapreader (class in mcap.reader)": [[18, "mcap.reader.McapReader"]], "nonseekingreader (class in mcap.reader)": [[18, "mcap.reader.NonSeekingReader"]], "seekingreader (class in mcap.reader)": [[18, "mcap.reader.SeekingReader"]], "get_header() (mcap.reader.mcapreader method)": [[18, "mcap.reader.McapReader.get_header"]], "get_header() (mcap.reader.nonseekingreader method)": [[18, "mcap.reader.NonSeekingReader.get_header"]], "get_header() (mcap.reader.seekingreader method)": [[18, "mcap.reader.SeekingReader.get_header"]], "get_summary() (mcap.reader.mcapreader method)": [[18, "mcap.reader.McapReader.get_summary"]], "get_summary() (mcap.reader.nonseekingreader method)": [[18, "mcap.reader.NonSeekingReader.get_summary"]], "get_summary() (mcap.reader.seekingreader method)": [[18, "mcap.reader.SeekingReader.get_summary"]], "iter_attachments() (mcap.reader.mcapreader method)": [[18, "mcap.reader.McapReader.iter_attachments"]], "iter_attachments() (mcap.reader.nonseekingreader method)": [[18, "mcap.reader.NonSeekingReader.iter_attachments"]], "iter_attachments() (mcap.reader.seekingreader method)": [[18, "mcap.reader.SeekingReader.iter_attachments"]], "iter_messages() (mcap.reader.mcapreader method)": [[18, "mcap.reader.McapReader.iter_messages"]], "iter_messages() (mcap.reader.nonseekingreader method)": [[18, "mcap.reader.NonSeekingReader.iter_messages"]], "iter_messages() (mcap.reader.seekingreader method)": [[18, "mcap.reader.SeekingReader.iter_messages"]], "iter_metadata() (mcap.reader.mcapreader method)": [[18, "mcap.reader.McapReader.iter_metadata"]], "iter_metadata() (mcap.reader.nonseekingreader method)": [[18, "mcap.reader.NonSeekingReader.iter_metadata"]], "iter_metadata() (mcap.reader.seekingreader method)": [[18, "mcap.reader.SeekingReader.iter_metadata"]], "make_reader() (in module mcap.reader)": [[18, "mcap.reader.make_reader"]], "mcap.reader": [[18, "module-mcap.reader"]], "attachment (class in mcap.records)": [[19, "mcap.records.Attachment"]], "attachmentindex (class in mcap.records)": [[19, "mcap.records.AttachmentIndex"]], "channel (class in mcap.records)": [[19, "mcap.records.Channel"]], "chunk (class in mcap.records)": [[19, "mcap.records.Chunk"]], "chunkindex (class in mcap.records)": [[19, "mcap.records.ChunkIndex"]], "dataend (class in mcap.records)": [[19, "mcap.records.DataEnd"]], "footer (class in mcap.records)": [[19, "mcap.records.Footer"]], "header (class in mcap.records)": [[19, "mcap.records.Header"]], "mcaprecord (class in mcap.records)": [[19, "mcap.records.McapRecord"]], "message (class in mcap.records)": [[19, "mcap.records.Message"]], "messageindex (class in mcap.records)": [[19, "mcap.records.MessageIndex"]], "metadata (class in mcap.records)": [[19, "mcap.records.Metadata"]], "metadataindex (class in mcap.records)": [[19, "mcap.records.MetadataIndex"]], "schema (class in mcap.records)": [[19, "mcap.records.Schema"]], "statistics (class in mcap.records)": [[19, "mcap.records.Statistics"]], "summaryoffset (class in mcap.records)": [[19, "mcap.records.SummaryOffset"]], "attachment_count (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.attachment_count"]], "channel_count (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.channel_count"]], "channel_id (mcap.records.message attribute)": [[19, "mcap.records.Message.channel_id"]], "channel_id (mcap.records.messageindex attribute)": [[19, "mcap.records.MessageIndex.channel_id"]], "channel_message_counts (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.channel_message_counts"]], "chunk_count (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.chunk_count"]], "chunk_length (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.chunk_length"]], "chunk_start_offset (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.chunk_start_offset"]], "compressed_size (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.compressed_size"]], "compression (mcap.records.chunk attribute)": [[19, "mcap.records.Chunk.compression"]], "compression (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.compression"]], "create_time (mcap.records.attachment attribute)": [[19, "mcap.records.Attachment.create_time"]], "create_time (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.create_time"]], "data (mcap.records.attachment attribute)": [[19, "mcap.records.Attachment.data"]], "data (mcap.records.chunk attribute)": [[19, "mcap.records.Chunk.data"]], "data (mcap.records.message attribute)": [[19, "mcap.records.Message.data"]], "data (mcap.records.schema attribute)": [[19, "mcap.records.Schema.data"]], "data_section_crc (mcap.records.dataend attribute)": [[19, "mcap.records.DataEnd.data_section_crc"]], "data_size (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.data_size"]], "encoding (mcap.records.schema attribute)": [[19, "mcap.records.Schema.encoding"]], "group_length (mcap.records.summaryoffset attribute)": [[19, "mcap.records.SummaryOffset.group_length"]], "group_opcode (mcap.records.summaryoffset attribute)": [[19, "mcap.records.SummaryOffset.group_opcode"]], "group_start (mcap.records.summaryoffset attribute)": [[19, "mcap.records.SummaryOffset.group_start"]], "id (mcap.records.channel attribute)": [[19, "mcap.records.Channel.id"]], "id (mcap.records.schema attribute)": [[19, "mcap.records.Schema.id"]], "length (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.length"]], "length (mcap.records.metadataindex attribute)": [[19, "mcap.records.MetadataIndex.length"]], "library (mcap.records.header attribute)": [[19, "mcap.records.Header.library"]], "log_time (mcap.records.attachment attribute)": [[19, "mcap.records.Attachment.log_time"]], "log_time (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.log_time"]], "log_time (mcap.records.message attribute)": [[19, "mcap.records.Message.log_time"]], "mcap.records": [[19, "module-mcap.records"]], "media_type (mcap.records.attachment attribute)": [[19, "mcap.records.Attachment.media_type"]], "media_type (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.media_type"]], "message_count (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.message_count"]], "message_encoding (mcap.records.channel attribute)": [[19, "mcap.records.Channel.message_encoding"]], "message_end_time (mcap.records.chunk attribute)": [[19, "mcap.records.Chunk.message_end_time"]], "message_end_time (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.message_end_time"]], "message_end_time (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.message_end_time"]], "message_index_length (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.message_index_length"]], "message_index_offsets (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.message_index_offsets"]], "message_start_time (mcap.records.chunk attribute)": [[19, "mcap.records.Chunk.message_start_time"]], "message_start_time (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.message_start_time"]], "message_start_time (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.message_start_time"]], "metadata (mcap.records.channel attribute)": [[19, "mcap.records.Channel.metadata"]], "metadata (mcap.records.metadata attribute)": [[19, "mcap.records.Metadata.metadata"]], "metadata_count (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.metadata_count"]], "name (mcap.records.attachment attribute)": [[19, "mcap.records.Attachment.name"]], "name (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.name"]], "name (mcap.records.metadata attribute)": [[19, "mcap.records.Metadata.name"]], "name (mcap.records.metadataindex attribute)": [[19, "mcap.records.MetadataIndex.name"]], "name (mcap.records.schema attribute)": [[19, "mcap.records.Schema.name"]], "offset (mcap.records.attachmentindex attribute)": [[19, "mcap.records.AttachmentIndex.offset"]], "offset (mcap.records.metadataindex attribute)": [[19, "mcap.records.MetadataIndex.offset"]], "profile (mcap.records.header attribute)": [[19, "mcap.records.Header.profile"]], "publish_time (mcap.records.message attribute)": [[19, "mcap.records.Message.publish_time"]], "read() (mcap.records.attachment static method)": [[19, "mcap.records.Attachment.read"]], "read() (mcap.records.attachmentindex static method)": [[19, "mcap.records.AttachmentIndex.read"]], "read() (mcap.records.channel static method)": [[19, "mcap.records.Channel.read"]], "read() (mcap.records.chunk static method)": [[19, "mcap.records.Chunk.read"]], "read() (mcap.records.chunkindex static method)": [[19, "mcap.records.ChunkIndex.read"]], "read() (mcap.records.dataend static method)": [[19, "mcap.records.DataEnd.read"]], "read() (mcap.records.footer static method)": [[19, "mcap.records.Footer.read"]], "read() (mcap.records.header static method)": [[19, "mcap.records.Header.read"]], "read() (mcap.records.message static method)": [[19, "mcap.records.Message.read"]], "read() (mcap.records.messageindex static method)": [[19, "mcap.records.MessageIndex.read"]], "read() (mcap.records.metadata static method)": [[19, "mcap.records.Metadata.read"]], "read() (mcap.records.metadataindex static method)": [[19, "mcap.records.MetadataIndex.read"]], "read() (mcap.records.schema static method)": [[19, "mcap.records.Schema.read"]], "read() (mcap.records.statistics static method)": [[19, "mcap.records.Statistics.read"]], "read() (mcap.records.summaryoffset static method)": [[19, "mcap.records.SummaryOffset.read"]], "records (mcap.records.messageindex attribute)": [[19, "mcap.records.MessageIndex.records"]], "schema_count (mcap.records.statistics attribute)": [[19, "mcap.records.Statistics.schema_count"]], "schema_id (mcap.records.channel attribute)": [[19, "mcap.records.Channel.schema_id"]], "sequence (mcap.records.message attribute)": [[19, "mcap.records.Message.sequence"]], "summary_crc (mcap.records.footer attribute)": [[19, "mcap.records.Footer.summary_crc"]], "summary_offset_start (mcap.records.footer attribute)": [[19, "mcap.records.Footer.summary_offset_start"]], "summary_start (mcap.records.footer attribute)": [[19, "mcap.records.Footer.summary_start"]], "topic (mcap.records.channel attribute)": [[19, "mcap.records.Channel.topic"]], "uncompressed_crc (mcap.records.chunk attribute)": [[19, "mcap.records.Chunk.uncompressed_crc"]], "uncompressed_size (mcap.records.chunk attribute)": [[19, "mcap.records.Chunk.uncompressed_size"]], "uncompressed_size (mcap.records.chunkindex attribute)": [[19, "mcap.records.ChunkIndex.uncompressed_size"]], "write() (mcap.records.attachment method)": [[19, "mcap.records.Attachment.write"]], "write() (mcap.records.attachmentindex method)": [[19, "mcap.records.AttachmentIndex.write"]], "write() (mcap.records.channel method)": [[19, "mcap.records.Channel.write"]], "write() (mcap.records.chunk method)": [[19, "mcap.records.Chunk.write"]], "write() (mcap.records.chunkindex method)": [[19, "mcap.records.ChunkIndex.write"]], "write() (mcap.records.dataend method)": [[19, "mcap.records.DataEnd.write"]], "write() (mcap.records.footer method)": [[19, "mcap.records.Footer.write"]], "write() (mcap.records.header method)": [[19, "mcap.records.Header.write"]], "write() (mcap.records.mcaprecord method)": [[19, "mcap.records.McapRecord.write"]], "write() (mcap.records.message method)": [[19, "mcap.records.Message.write"]], "write() (mcap.records.messageindex method)": [[19, "mcap.records.MessageIndex.write"]], "write() (mcap.records.metadata method)": [[19, "mcap.records.Metadata.write"]], "write() (mcap.records.metadataindex method)": [[19, "mcap.records.MetadataIndex.write"]], "write() (mcap.records.schema method)": [[19, "mcap.records.Schema.write"]], "write() (mcap.records.statistics method)": [[19, "mcap.records.Statistics.write"]], "write() (mcap.records.summaryoffset method)": [[19, "mcap.records.SummaryOffset.write"]], "mcap.serialization": [[20, "module-mcap.serialization"]], "normalize_value() (in module mcap.serialization)": [[20, "mcap.serialization.normalize_value"]], "stringify_record() (in module mcap.serialization)": [[20, "mcap.serialization.stringify_record"]], "streamreader (class in mcap.stream_reader)": [[21, "mcap.stream_reader.StreamReader"]], "mcap.stream_reader": [[21, "module-mcap.stream_reader"]], "records (mcap.stream_reader.streamreader property)": [[21, "mcap.stream_reader.StreamReader.records"]], "summary (class in mcap.summary)": [[22, "mcap.summary.Summary"]], "mcap.summary": [[22, "module-mcap.summary"]], "cbor (mcap.well_known.messageencoding attribute)": [[23, "mcap.well_known.MessageEncoding.CBOR"]], "cdr (mcap.well_known.messageencoding attribute)": [[23, "mcap.well_known.MessageEncoding.CDR"]], "flatbuffer (mcap.well_known.messageencoding attribute)": [[23, "mcap.well_known.MessageEncoding.Flatbuffer"]], "flatbuffer (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.Flatbuffer"]], "json (mcap.well_known.messageencoding attribute)": [[23, "mcap.well_known.MessageEncoding.JSON"]], "jsonschema (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.JSONSchema"]], "messageencoding (class in mcap.well_known)": [[23, "mcap.well_known.MessageEncoding"]], "profile (class in mcap.well_known)": [[23, "mcap.well_known.Profile"]], "protobuf (mcap.well_known.messageencoding attribute)": [[23, "mcap.well_known.MessageEncoding.Protobuf"]], "protobuf (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.Protobuf"]], "ros1 (mcap.well_known.messageencoding attribute)": [[23, "mcap.well_known.MessageEncoding.ROS1"]], "ros1 (mcap.well_known.profile attribute)": [[23, "mcap.well_known.Profile.ROS1"]], "ros1 (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.ROS1"]], "ros2 (mcap.well_known.profile attribute)": [[23, "mcap.well_known.Profile.ROS2"]], "ros2 (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.ROS2"]], "ros2idl (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.ROS2IDL"]], "schemaencoding (class in mcap.well_known)": [[23, "mcap.well_known.SchemaEncoding"]], "selfdescribing (mcap.well_known.schemaencoding attribute)": [[23, "mcap.well_known.SchemaEncoding.SelfDescribing"]], "mcap.well_known": [[23, "module-mcap.well_known"]], "all (mcap.writer.indextype attribute)": [[24, "mcap.writer.IndexType.ALL"]], "attachment (mcap.writer.indextype attribute)": [[24, "mcap.writer.IndexType.ATTACHMENT"]], "chunk (mcap.writer.indextype attribute)": [[24, "mcap.writer.IndexType.CHUNK"]], "compressiontype (class in mcap.writer)": [[24, "mcap.writer.CompressionType"]], "indextype (class in mcap.writer)": [[24, "mcap.writer.IndexType"]], "lz4 (mcap.writer.compressiontype attribute)": [[24, "mcap.writer.CompressionType.LZ4"]], "message (mcap.writer.indextype attribute)": [[24, "mcap.writer.IndexType.MESSAGE"]], "metadata (mcap.writer.indextype attribute)": [[24, "mcap.writer.IndexType.METADATA"]], "none (mcap.writer.compressiontype attribute)": [[24, "mcap.writer.CompressionType.NONE"]], "none (mcap.writer.indextype attribute)": [[24, "mcap.writer.IndexType.NONE"]], "writer (class in mcap.writer)": [[24, "mcap.writer.Writer"]], "zstd (mcap.writer.compressiontype attribute)": [[24, "mcap.writer.CompressionType.ZSTD"]], "add_attachment() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.add_attachment"]], "add_message() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.add_message"]], "add_metadata() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.add_metadata"]], "finish() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.finish"]], "mcap.writer": [[24, "module-mcap.writer"]], "register_channel() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.register_channel"]], "register_schema() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.register_schema"]], "start() (mcap.writer.writer method)": [[24, "mcap.writer.Writer.start"]], "mcap_protobuf": [[26, "module-mcap_protobuf"]], "decoder (class in mcap_protobuf.decoder)": [[27, "mcap_protobuf.decoder.Decoder"]], "mcapprotobufdecodeerror": [[27, "mcap_protobuf.decoder.McapProtobufDecodeError"]], "decode() (mcap_protobuf.decoder.decoder method)": [[27, "mcap_protobuf.decoder.Decoder.decode"]], "mcap_protobuf.decoder": [[27, "module-mcap_protobuf.decoder"]], "mcapprotobufmessage (class in mcap_protobuf.reader)": [[28, "mcap_protobuf.reader.McapProtobufMessage"]], "log_time (mcap_protobuf.reader.mcapprotobufmessage property)": [[28, "mcap_protobuf.reader.McapProtobufMessage.log_time"]], "mcap_protobuf.reader": [[28, "module-mcap_protobuf.reader"]], "publish_time (mcap_protobuf.reader.mcapprotobufmessage property)": [[28, "mcap_protobuf.reader.McapProtobufMessage.publish_time"]], "read_protobuf_messages() (in module mcap_protobuf.reader)": [[28, "mcap_protobuf.reader.read_protobuf_messages"]], "build_file_descriptor_set() (in module mcap_protobuf.schema)": [[29, "mcap_protobuf.schema.build_file_descriptor_set"]], "mcap_protobuf.schema": [[29, "module-mcap_protobuf.schema"]], "register_schema() (in module mcap_protobuf.schema)": [[29, "mcap_protobuf.schema.register_schema"]], "writer (class in mcap_protobuf.writer)": [[30, "mcap_protobuf.writer.Writer"]], "finish() (mcap_protobuf.writer.writer method)": [[30, "mcap_protobuf.writer.Writer.finish"]], "mcap_protobuf.writer": [[30, "module-mcap_protobuf.writer"]], "write_message() (mcap_protobuf.writer.writer method)": [[30, "mcap_protobuf.writer.Writer.write_message"]], "mcap_ros1": [[32, "module-mcap_ros1"]], "decoder (class in mcap_ros1.decoder)": [[33, "mcap_ros1.decoder.Decoder"]], "mcapros1decodeerror": [[33, "mcap_ros1.decoder.McapROS1DecodeError"]], "decode() (mcap_ros1.decoder.decoder method)": [[33, "mcap_ros1.decoder.Decoder.decode"]], "mcap_ros1.decoder": [[33, "module-mcap_ros1.decoder"]], "mcapros1message (class in mcap_ros1.reader)": [[34, "mcap_ros1.reader.McapROS1Message"]], "channel (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.channel"]], "channel_metadata (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.channel_metadata"]], "log_time (mcap_ros1.reader.mcapros1message property)": [[34, "mcap_ros1.reader.McapROS1Message.log_time"]], "log_time_ns (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.log_time_ns"]], "mcap_ros1.reader": [[34, "module-mcap_ros1.reader"]], "publish_time (mcap_ros1.reader.mcapros1message property)": [[34, "mcap_ros1.reader.McapROS1Message.publish_time"]], "publish_time_ns (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.publish_time_ns"]], "read_ros1_messages() (in module mcap_ros1.reader)": [[34, "mcap_ros1.reader.read_ros1_messages"]], "ros_msg (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.ros_msg"]], "schema (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.schema"]], "sequence_count (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.sequence_count"]], "topic (mcap_ros1.reader.mcapros1message attribute)": [[34, "mcap_ros1.reader.McapROS1Message.topic"]], "writer (class in mcap_ros1.writer)": [[35, "mcap_ros1.writer.Writer"]], "finish() (mcap_ros1.writer.writer method)": [[35, "mcap_ros1.writer.Writer.finish"]], "mcap_ros1.writer": [[35, "module-mcap_ros1.writer"]], "write_message() (mcap_ros1.writer.writer method)": [[35, "mcap_ros1.writer.Writer.write_message"]], "mcap_ros2": [[37, "module-mcap_ros2"]], "cdr_be (mcap_ros2.cdr.encapsulationkind attribute)": [[38, "mcap_ros2.cdr.EncapsulationKind.CDR_BE"]], "cdr_le (mcap_ros2.cdr.encapsulationkind attribute)": [[38, "mcap_ros2.cdr.EncapsulationKind.CDR_LE"]], "cdrreader (class in mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.CdrReader"]], "cdrwriter (class in mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.CdrWriter"]], "encapsulationkind (class in mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.EncapsulationKind"]], "pl_cdr_be (mcap_ros2.cdr.encapsulationkind attribute)": [[38, "mcap_ros2.cdr.EncapsulationKind.PL_CDR_BE"]], "pl_cdr_le (mcap_ros2.cdr.encapsulationkind attribute)": [[38, "mcap_ros2.cdr.EncapsulationKind.PL_CDR_LE"]], "boolean() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.boolean"]], "boolean_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.boolean_array"]], "byte_length() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.byte_length"]], "data (mcap_ros2.cdr.cdrreader attribute)": [[38, "mcap_ros2.cdr.CdrReader.data"]], "decoded_bytes() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.decoded_bytes"]], "float32() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.float32"]], "float32_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.float32_array"]], "float64() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.float64"]], "float64_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.float64_array"]], "int16() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int16"]], "int16_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int16_array"]], "int32() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int32"]], "int32_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int32_array"]], "int64() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int64"]], "int64_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int64_array"]], "int8() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int8"]], "int8_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.int8_array"]], "kind() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.kind"]], "little_endian (mcap_ros2.cdr.cdrreader attribute)": [[38, "mcap_ros2.cdr.CdrReader.little_endian"]], "little_endian (mcap_ros2.cdr.cdrwriter attribute)": [[38, "mcap_ros2.cdr.CdrWriter.little_endian"]], "mcap_ros2.cdr": [[38, "module-mcap_ros2.cdr"]], "offset (mcap_ros2.cdr.cdrreader attribute)": [[38, "mcap_ros2.cdr.CdrReader.offset"]], "offset (mcap_ros2.cdr.cdrwriter attribute)": [[38, "mcap_ros2.cdr.CdrWriter.offset"]], "output (mcap_ros2.cdr.cdrwriter attribute)": [[38, "mcap_ros2.cdr.CdrWriter.output"]], "pack_float32be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_float32be"]], "pack_float32le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_float32le"]], "pack_float64be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_float64be"]], "pack_float64le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_float64le"]], "pack_int16be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int16be"]], "pack_int16le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int16le"]], "pack_int32be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int32be"]], "pack_int32le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int32le"]], "pack_int64be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int64be"]], "pack_int64le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int64le"]], "pack_int8() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_int8"]], "pack_uint16be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint16be"]], "pack_uint16le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint16le"]], "pack_uint32be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint32be"]], "pack_uint32le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint32le"]], "pack_uint64be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint64be"]], "pack_uint64le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint64le"]], "pack_uint8() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.pack_uint8"]], "seek() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.seek"]], "seek_to() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.seek_to"]], "sequence_length() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.sequence_length"]], "string() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.string"]], "string_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.string_array"]], "string_raw() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.string_raw"]], "uint16() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint16"]], "uint16be() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint16BE"]], "uint16_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint16_array"]], "uint32() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint32"]], "uint32be() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint32BE"]], "uint32_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint32_array"]], "uint64() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint64"]], "uint64be() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint64BE"]], "uint64_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint64_array"]], "uint8() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint8"]], "uint8_array() (mcap_ros2.cdr.cdrreader method)": [[38, "mcap_ros2.cdr.CdrReader.uint8_array"]], "unpack_float32be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_float32be"]], "unpack_float32le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_float32le"]], "unpack_float64be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_float64be"]], "unpack_float64le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_float64le"]], "unpack_int16be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int16be"]], "unpack_int16le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int16le"]], "unpack_int32be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int32be"]], "unpack_int32le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int32le"]], "unpack_int64be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int64be"]], "unpack_int64le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int64le"]], "unpack_int8() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_int8"]], "unpack_uint16be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint16be"]], "unpack_uint16le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint16le"]], "unpack_uint32be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint32be"]], "unpack_uint32le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint32le"]], "unpack_uint64be() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint64be"]], "unpack_uint64le() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint64le"]], "unpack_uint8() (in module mcap_ros2.cdr)": [[38, "mcap_ros2.cdr.unpack_uint8"]], "write_boolean() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_boolean"]], "write_boolean_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_boolean_array"]], "write_bytes() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_bytes"]], "write_float32() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_float32"]], "write_float32_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_float32_array"]], "write_float64() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_float64"]], "write_float64_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_float64_array"]], "write_int16() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int16"]], "write_int16_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int16_array"]], "write_int32() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int32"]], "write_int32_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int32_array"]], "write_int64() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int64"]], "write_int64_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int64_array"]], "write_int8() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int8"]], "write_int8_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_int8_array"]], "write_string() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_string"]], "write_string_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_string_array"]], "write_uint16() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint16"]], "write_uint16be() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint16BE"]], "write_uint16_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint16_array"]], "write_uint32() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint32"]], "write_uint32be() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint32BE"]], "write_uint32_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint32_array"]], "write_uint64() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint64"]], "write_uint64be() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint64BE"]], "write_uint64_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint64_array"]], "write_uint8() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint8"]], "write_uint8_array() (mcap_ros2.cdr.cdrwriter method)": [[38, "mcap_ros2.cdr.CdrWriter.write_uint8_array"]], "decoder (class in mcap_ros2.decoder)": [[39, "mcap_ros2.decoder.Decoder"]], "mcapros2decodeerror": [[39, "mcap_ros2.decoder.McapROS2DecodeError"]], "decode() (mcap_ros2.decoder.decoder method)": [[39, "mcap_ros2.decoder.Decoder.decode"]], "mcap_ros2.decoder": [[39, "module-mcap_ros2.decoder"]], "encode_message() (in module mcap_ros2.dynamic)": [[40, "mcap_ros2.dynamic.encode_message"]], "generate_dynamic() (in module mcap_ros2.dynamic)": [[40, "mcap_ros2.dynamic.generate_dynamic"]], "mcap_ros2.dynamic": [[40, "module-mcap_ros2.dynamic"]], "read_message() (in module mcap_ros2.dynamic)": [[40, "mcap_ros2.dynamic.read_message"]], "serialize_dynamic() (in module mcap_ros2.dynamic)": [[40, "mcap_ros2.dynamic.serialize_dynamic"]], "mcapros2message (class in mcap_ros2.reader)": [[41, "mcap_ros2.reader.McapROS2Message"]], "channel (mcap_ros2.reader.mcapros2message attribute)": [[41, "mcap_ros2.reader.McapROS2Message.channel"]], "log_time (mcap_ros2.reader.mcapros2message property)": [[41, "mcap_ros2.reader.McapROS2Message.log_time"]], "log_time_ns (mcap_ros2.reader.mcapros2message attribute)": [[41, "mcap_ros2.reader.McapROS2Message.log_time_ns"]], "mcap_ros2.reader": [[41, "module-mcap_ros2.reader"]], "publish_time (mcap_ros2.reader.mcapros2message property)": [[41, "mcap_ros2.reader.McapROS2Message.publish_time"]], "publish_time_ns (mcap_ros2.reader.mcapros2message attribute)": [[41, "mcap_ros2.reader.McapROS2Message.publish_time_ns"]], "read_ros2_messages() (in module mcap_ros2.reader)": [[41, "mcap_ros2.reader.read_ros2_messages"]], "ros_msg (mcap_ros2.reader.mcapros2message attribute)": [[41, "mcap_ros2.reader.McapROS2Message.ros_msg"]], "schema (mcap_ros2.reader.mcapros2message attribute)": [[41, "mcap_ros2.reader.McapROS2Message.schema"]], "sequence_count (mcap_ros2.reader.mcapros2message attribute)": [[41, "mcap_ros2.reader.McapROS2Message.sequence_count"]], "mcapros2writeerror": [[42, "mcap_ros2.writer.McapROS2WriteError"]], "writer (class in mcap_ros2.writer)": [[42, "mcap_ros2.writer.Writer"]], "finish() (mcap_ros2.writer.writer method)": [[42, "mcap_ros2.writer.Writer.finish"]], "mcap_ros2.writer": [[42, "module-mcap_ros2.writer"]], "register_msgdef() (mcap_ros2.writer.writer method)": [[42, "mcap_ros2.writer.Writer.register_msgdef"]], "write_message() (mcap_ros2.writer.writer method)": [[42, "mcap_ros2.writer.Writer.write_message"]]}})