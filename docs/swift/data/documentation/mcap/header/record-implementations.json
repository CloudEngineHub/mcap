{"metadata":{"title":"Record Implementations","role":"collectionGroup","modules":[{"name":"MCAP"}]},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Header"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Header\/Record-Implementations"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/header\/record-implementations"]}],"sections":[],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Header\/serialize(to:)"],"generated":true},{"title":"Type Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Header\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/Header\/deserializingFields(from:)"],"generated":true}],"references":{"doc://MCAP/documentation/MCAP/Header/deserializing(from:at:)":{"title":"deserializing(from:at:)","role":"symbol","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header\/deserializing(from:at:)","type":"topic","url":"\/documentation\/mcap\/header\/deserializing(from:at:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://MCAP/documentation/MCAP/Header/deserializingFields(from:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header\/deserializingFields(from:)","title":"deserializingFields(from:)","role":"symbol","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/mcap\/header\/deserializingfields(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializingFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://MCAP/documentation/MCAP/Header":{"navigatorTitle":[{"text":"Header","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[],"url":"\/documentation\/mcap\/header","type":"topic","title":"Header","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Header","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header"},"doc://MCAP/documentation/MCAP/Header/serialize(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/mcap\/header\/serialize(to:)","title":"serialize(to:)","kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header\/serialize(to:)","role":"symbol","abstract":[]},"doc://MCAP/documentation/MCAP":{"kind":"symbol","title":"MCAP","url":"\/documentation\/mcap","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","role":"collection","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}]}}}