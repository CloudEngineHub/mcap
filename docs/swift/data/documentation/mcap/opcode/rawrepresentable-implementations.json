{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/RawRepresentable-Implementations"},"sections":[],"variants":[{"paths":["\/documentation\/mcap\/opcode\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"collectionGroup","modules":[{"name":"MCAP"}],"title":"RawRepresentable Implementations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hashValue"],"title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hash(into:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"]]},"kind":"article","references":{"doc://MCAP/documentation/MCAP":{"type":"topic","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"title":"MCAP","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol","url":"\/documentation\/mcap","role":"collection"},"doc://MCAP/documentation/MCAP/Opcode":{"navigatorTitle":[{"kind":"identifier","text":"Opcode"}],"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Opcode"}],"title":"Opcode","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","kind":"symbol","url":"\/documentation\/mcap\/opcode","role":"symbol"},"doc://MCAP/documentation/MCAP/Opcode/hash(into:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","title":"hash(into:)","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hash(into:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","url":"\/documentation\/mcap\/opcode\/hash(into:)"},"doc://MCAP/documentation/MCAP/Opcode/hashValue":{"type":"topic","kind":"symbol","url":"\/documentation\/mcap\/opcode\/hashvalue","role":"symbol","title":"hashValue","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hashValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[]}}}