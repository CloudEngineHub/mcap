{"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"]]},"sections":[],"schemaVersion":{"patch":0,"minor":2,"major":0},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/opcode\/equatable-implementations"]}],"metadata":{"modules":[{"name":"MCAP"}],"role":"collectionGroup","title":"Equatable Implementations"},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/!=(_:_:)"],"generated":true,"title":"Operators"}],"abstract":[{"text":"No overview available.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/Equatable-Implementations"},"references":{"doc://MCAP/documentation/MCAP":{"type":"topic","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"title":"MCAP","role":"collection","url":"\/documentation\/mcap","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP"},"doc://MCAP/documentation/MCAP/Opcode":{"role":"symbol","title":"Opcode","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","navigatorTitle":[{"text":"Opcode","kind":"identifier"}],"url":"\/documentation\/mcap\/opcode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Opcode","kind":"identifier"}],"abstract":[],"kind":"symbol"},"doc://MCAP/documentation/MCAP/Opcode/!=(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"!=(_:_:)","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/!=(_:_:)","type":"topic","url":"\/documentation\/mcap\/opcode\/!=(_:_:)","role":"symbol"}}}