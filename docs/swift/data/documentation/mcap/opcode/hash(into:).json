{"abstract":[{"type":"text","text":"Inherited from "},{"code":"RawRepresentable.hash(into:)","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":2,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hash(into:)"},"metadata":{"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:4MCAP6OpcodeO","roleHeading":"Instance Method","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"symbolKind":"method","extendedModule":"Swift","modules":[{"name":"MCAP"}],"title":"hash(into:)"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Opcode","doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/RawRepresentable-Implementations"]]},"variants":[{"paths":["\/documentation\/mcap\/opcode\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://MCAP/documentation/MCAP/Opcode/RawRepresentable-Implementations":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/RawRepresentable-Implementations","kind":"article","type":"topic","url":"\/documentation\/mcap\/opcode\/rawrepresentable-implementations","role":"collectionGroup","title":"RawRepresentable Implementations","abstract":[]},"doc://MCAP/documentation/MCAP":{"url":"\/documentation\/mcap","role":"collection","title":"MCAP","kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}]},"doc://MCAP/documentation/MCAP/Opcode":{"title":"Opcode","url":"\/documentation\/mcap\/opcode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Opcode","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"text":"Opcode","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode"},"doc://MCAP/documentation/MCAP/Opcode/hash(into:)":{"abstract":[],"role":"symbol","url":"\/documentation\/mcap\/opcode\/hash(into:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"hash(into:)","kind":"symbol"}}}