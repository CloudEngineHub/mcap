{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serializeFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Message\/serializeFields(to:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Message"]]},"variants":[{"paths":["\/documentation\/mcap\/message\/serializefields(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Record.serializeFields(to:)"},{"type":"text","text":"."}],"sections":[],"metadata":{"title":"serializeFields(to:)","modules":[{"name":"MCAP"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serializeFields","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:4MCAP7MessageV15serializeFields2toy10Foundation4DataVz_tF","roleHeading":"Instance Method","symbolKind":"method"},"references":{"doc://MCAP/documentation/MCAP/Message":{"url":"\/documentation\/mcap\/message","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Message"}],"type":"topic","title":"Message","abstract":[],"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message"},"doc://MCAP/documentation/MCAP/Message/serializeFields(to:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message\/serializeFields(to:)","url":"\/documentation\/mcap\/message\/serializefields(to:)","abstract":[],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serializeFields","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":")"}],"title":"serializeFields(to:)","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP":{"title":"MCAP","type":"topic","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"url":"\/documentation\/mcap","role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol"}}}