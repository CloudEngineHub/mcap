{"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/Record-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset"]]},"variants":[{"paths":["\/documentation\/mcap\/summaryoffset\/record-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","metadata":{"title":"Record Implementations","modules":[{"name":"MCAP"}],"role":"collectionGroup"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/serialize(to:)"],"title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/deserializingFields(from:)"],"title":"Type Methods","generated":true}],"references":{"doc://MCAP/documentation/MCAP/SummaryOffset/deserializingFields(from:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/deserializingFields(from:)","kind":"symbol","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/mcap\/summaryoffset\/deserializingfields(from:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializingFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"deserializingFields(from:)"},"doc://MCAP/documentation/MCAP/SummaryOffset/deserializing(from:at:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/mcap\/summaryoffset\/deserializing(from:at:)","abstract":[],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/deserializing(from:at:)","title":"deserializing(from:at:)","kind":"symbol"},"doc://MCAP/documentation/MCAP":{"role":"collection","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"url":"\/documentation\/mcap","title":"MCAP","type":"topic"},"doc://MCAP/documentation/MCAP/SummaryOffset/serialize(to:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset\/serialize(to:)","kind":"symbol","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/mcap\/summaryoffset\/serialize(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}],"title":"serialize(to:)"},"doc://MCAP/documentation/MCAP/SummaryOffset":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SummaryOffset","kind":"identifier"}],"type":"topic","url":"\/documentation\/mcap\/summaryoffset","abstract":[],"role":"symbol","navigatorTitle":[{"text":"SummaryOffset","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset","title":"SummaryOffset","kind":"symbol"}}}