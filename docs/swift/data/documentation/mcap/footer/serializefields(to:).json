{"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"Record.serializeFields(to:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"serializeFields(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serializeFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","externalID":"s:4MCAP6FooterV15serializeFields2toy10Foundation4DataVz_tF","symbolKind":"method","role":"symbol","modules":[{"name":"MCAP"}]},"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Footer\/serializeFields(to:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serializeFields","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Footer"]]},"variants":[{"paths":["\/documentation\/mcap\/footer\/serializefields(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MCAP/documentation/MCAP/Footer/serializeFields(to:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer\/serializeFields(to:)","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serializeFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"title":"serializeFields(to:)","url":"\/documentation\/mcap\/footer\/serializefields(to:)"},"doc://MCAP/documentation/MCAP/Footer":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer","url":"\/documentation\/mcap\/footer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Footer"}],"title":"Footer","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Footer"}]},"doc://MCAP/documentation/MCAP":{"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"type":"topic","url":"\/documentation\/mcap","kind":"symbol","title":"MCAP","role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP"}}}