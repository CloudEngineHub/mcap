{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/metadataindex\/record-implementations"]}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex"]]},"sections":[],"metadata":{"title":"Record Implementations","role":"collectionGroup","modules":[{"name":"MCAP"}]},"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/Record-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/serialize(to:)"],"title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializingFields(from:)"],"title":"Type Methods","generated":true}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","references":{"doc://MCAP/documentation/MCAP/MetadataIndex/deserializing(from:at:)":{"abstract":[],"kind":"symbol","url":"\/documentation\/mcap\/metadataindex\/deserializing(from:at:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializing(from:at:)","title":"deserializing(from:at:)","role":"symbol"},"doc://MCAP/documentation/MCAP/MetadataIndex":{"title":"MetadataIndex","navigatorTitle":[{"kind":"identifier","text":"MetadataIndex"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/mcap\/metadataindex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetadataIndex"}],"type":"topic"},"doc://MCAP/documentation/MCAP/MetadataIndex/deserializingFields(from:)":{"title":"deserializingFields(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializingFields"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializingFields(from:)","abstract":[],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/metadataindex\/deserializingfields(from:)"},"doc://MCAP/documentation/MCAP/MetadataIndex/serialize(to:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/serialize(to:)","role":"symbol","url":"\/documentation\/mcap\/metadataindex\/serialize(to:)","kind":"symbol","type":"topic","abstract":[],"title":"serialize(to:)"},"doc://MCAP/documentation/MCAP":{"title":"MCAP","type":"topic","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP","url":"\/documentation\/mcap","kind":"symbol"}}}