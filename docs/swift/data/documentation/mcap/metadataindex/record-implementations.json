{"kind":"article","variants":[{"paths":["\/documentation\/mcap\/metadataindex\/record-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"role":"collectionGroup","modules":[{"name":"MCAP"}],"title":"Record Implementations"},"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/Record-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/serialize(to:)"],"generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializingFields(from:)"],"generated":true,"title":"Type Methods"}],"references":{"doc://MCAP/documentation/MCAP":{"title":"MCAP","identifier":"doc:\/\/MCAP\/documentation\/MCAP","url":"\/documentation\/mcap","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"type":"topic","kind":"symbol","role":"collection"},"doc://MCAP/documentation/MCAP/MetadataIndex/deserializingFields(from:)":{"title":"deserializingFields(from:)","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializingFields(from:)","url":"\/documentation\/mcap\/metadataindex\/deserializingfields(from:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializingFields","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://MCAP/documentation/MCAP/MetadataIndex/deserializing(from:at:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/mcap\/metadataindex\/deserializing(from:at:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializing(from:at:)","kind":"symbol","title":"deserializing(from:at:)","abstract":[],"role":"symbol"},"doc://MCAP/documentation/MCAP/MetadataIndex/serialize(to:)":{"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/serialize(to:)","kind":"symbol","title":"serialize(to:)","url":"\/documentation\/mcap\/metadataindex\/serialize(to:)","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/MetadataIndex":{"title":"MetadataIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetadataIndex"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","navigatorTitle":[{"kind":"identifier","text":"MetadataIndex"}],"url":"\/documentation\/mcap\/metadataindex","abstract":[],"type":"topic","kind":"symbol","role":"symbol"}}}