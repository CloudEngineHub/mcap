{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex"]]},"kind":"article","metadata":{"modules":[{"name":"MCAP"}],"title":"Record Implementations","role":"collectionGroup"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/metadataindex\/record-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/Record-Implementations"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/serialize(to:)"],"generated":true},{"title":"Type Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializingFields(from:)"],"generated":true}],"references":{"doc://MCAP/documentation/MCAP/MetadataIndex/deserializing(from:at:)":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializing(from:at:)","role":"symbol","url":"\/documentation\/mcap\/metadataindex\/deserializing(from:at:)","kind":"symbol","title":"deserializing(from:at:)"},"doc://MCAP/documentation/MCAP/MetadataIndex/serialize(to:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/mcap\/metadataindex\/serialize(to:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/serialize(to:)","abstract":[],"title":"serialize(to:)"},"doc://MCAP/documentation/MCAP/MetadataIndex":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetadataIndex"}],"navigatorTitle":[{"kind":"identifier","text":"MetadataIndex"}],"kind":"symbol","url":"\/documentation\/mcap\/metadataindex","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","abstract":[],"title":"MetadataIndex"},"doc://MCAP/documentation/MCAP/MetadataIndex/deserializingFields(from:)":{"role":"symbol","url":"\/documentation\/mcap\/metadataindex\/deserializingfields(from:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex\/deserializingFields(from:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializingFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"deserializingFields(from:)","abstract":[]},"doc://MCAP/documentation/MCAP":{"type":"topic","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"url":"\/documentation\/mcap","title":"MCAP","role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol"}}}