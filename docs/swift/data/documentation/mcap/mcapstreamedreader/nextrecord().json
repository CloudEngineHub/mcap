{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","title":"nextRecord()","externalID":"s:4MCAP18MCAPStreamedReaderC10nextRecordAA0E0_pSgyKF","symbolKind":"method","modules":[{"name":"MCAP"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP","text":"Record"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/mcap\/mcapstreamedreader\/nextrecord()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","text":"Record"},{"kind":"text","text":"?"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next record, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if not enough data was available to parse a record."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"content":[{"inlineContent":[{"type":"text","text":"Any error encountered during reading, decompression, or parsing."}],"type":"paragraph"}],"type":"aside","name":"Throws","style":"note"}]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","interfaceLanguage":"swift"},"references":{"doc://MCAP/documentation/MCAP/Record":{"url":"\/documentation\/mcap\/record","navigatorTitle":[{"kind":"identifier","text":"Record"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","title":"Record","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}],"type":"topic","role":"symbol"},"doc://MCAP/documentation/MCAP":{"role":"collection","url":"\/documentation\/mcap","title":"MCAP","kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}]},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/nextRecord()":{"abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}],"title":"nextRecord()","kind":"symbol","role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","url":"\/documentation\/mcap\/mcapstreamedreader\/nextrecord()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP","text":"Record"},{"kind":"text","text":"?"}],"type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","type":"topic","url":"\/documentation\/mcap\/mcapstreamedreader","title":"MCAPStreamedReader","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MCAPStreamedReader"}],"abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}]}}}