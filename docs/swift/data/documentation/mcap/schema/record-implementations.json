{"metadata":{"title":"Record Implementations","modules":[{"name":"MCAP"}],"role":"collectionGroup"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/schema\/record-implementations"]}],"abstract":[{"type":"text","text":"No overview available."}],"schemaVersion":{"patch":0,"major":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Schema"]]},"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)"]},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializingFields(from:)"]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/Record-Implementations","interfaceLanguage":"swift"},"kind":"article","references":{"doc://MCAP/documentation/MCAP/Schema/deserializing(from:at:)":{"url":"\/documentation\/mcap\/schema\/deserializing(from:at:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializing(from:at:)","abstract":[],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"deserializing(from:at:)","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/Schema/deserializingFields(from:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializingFields(from:)","role":"symbol","abstract":[],"title":"deserializingFields(from:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deserializingFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/mcap\/schema\/deserializingfields(from:)","type":"topic"},"doc://MCAP/documentation/MCAP/Schema/serialize(to:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)","url":"\/documentation\/mcap\/schema\/serialize(to:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":")"}],"title":"serialize(to:)"},"doc://MCAP/documentation/MCAP/Schema":{"kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Schema"}],"role":"symbol","title":"Schema","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Schema"}],"url":"\/documentation\/mcap\/schema"},"doc://MCAP/documentation/MCAP":{"role":"collection","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","url":"\/documentation\/mcap","title":"MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"kind":"symbol"}}}