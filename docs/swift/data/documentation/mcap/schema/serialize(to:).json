{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Schema","doc:\/\/MCAP\/documentation\/MCAP\/Schema\/Record-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"modules":[{"name":"MCAP"}],"externalID":"s:4MCAP6RecordPAAE9serialize2toy10Foundation4DataVz_tF::SYNTHESIZED::s:4MCAP6SchemaV","extendedModule":"MCAP","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"serialize(to:)"},"variants":[{"paths":["\/documentation\/mcap\/schema\/serialize(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Record.serialize(to:)","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://MCAP/documentation/MCAP/Schema/serialize(to:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}],"title":"serialize(to:)","url":"\/documentation\/mcap\/schema\/serialize(to:)","role":"symbol","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)"},"doc://MCAP/documentation/MCAP/Schema":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Schema","kind":"identifier"}],"type":"topic","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","kind":"symbol","title":"Schema","role":"symbol","url":"\/documentation\/mcap\/schema","navigatorTitle":[{"text":"Schema","kind":"identifier"}]},"doc://MCAP/documentation/MCAP":{"kind":"symbol","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP","role":"collection","title":"MCAP","type":"topic","url":"\/documentation\/mcap"},"doc://MCAP/documentation/MCAP/Schema/Record-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/Record-Implementations","url":"\/documentation\/mcap\/schema\/record-implementations","role":"collectionGroup","abstract":[],"title":"Record Implementations"}}}