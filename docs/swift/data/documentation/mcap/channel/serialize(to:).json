{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/serialize(to:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/channel\/serialize(to:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"serialize(to:)","modules":[{"name":"MCAP"}],"externalID":"s:4MCAP6RecordPAAE9serialize2toy10Foundation4DataVz_tF::SYNTHESIZED::s:4MCAP7ChannelV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":")"}],"role":"symbol","extendedModule":"MCAP","roleHeading":"Instance Method","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Channel","doc:\/\/MCAP\/documentation\/MCAP\/Channel\/Record-Implementations"]]},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Record.serialize(to:)"},{"text":".","type":"text"}],"references":{"doc://MCAP/documentation/MCAP/Channel/serialize(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/serialize(to:)","type":"topic","title":"serialize(to:)","url":"\/documentation\/mcap\/channel\/serialize(to:)","kind":"symbol","abstract":[]},"doc://MCAP/documentation/MCAP/Channel/Record-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/Record-Implementations","type":"topic","title":"Record Implementations","url":"\/documentation\/mcap\/channel\/record-implementations","kind":"article","abstract":[]},"doc://MCAP/documentation/MCAP":{"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"type":"topic","url":"\/documentation\/mcap","kind":"symbol","title":"MCAP","role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP"},"doc://MCAP/documentation/MCAP/Channel":{"abstract":[],"type":"topic","url":"\/documentation\/mcap\/channel","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel"}}}