{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)"},{"type":"text","text":" when new data is available to add it to the reader’s internal buffer. Then,"},{"type":"text","text":" "},{"type":"text","text":"call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()"},{"type":"text","text":" repeatedly to consume records that are fully parseable."}]},{"code":["let reader = MCAPStreamedReader()","while let data = readSomeData() {","  reader.append(data)","  while let record = try reader.nextRecord() {","    \/\/ process a record...","  }","}"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()"]}],"kind":"symbol","abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/mcapstreamedreader"]}],"metadata":{"roleHeading":"Class","symbolKind":"class","externalID":"s:4MCAP18MCAPStreamedReaderC","title":"MCAPStreamedReader","navigatorTitle":[{"kind":"identifier","text":"MCAPStreamedReader"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"modules":[{"name":"MCAP"}]},"references":{"doc://MCAP/documentation/MCAP":{"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP","url":"\/documentation\/mcap","type":"topic","title":"MCAP","kind":"symbol"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/append(_:)":{"url":"\/documentation\/mcap\/mcapstreamedreader\/append(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}],"abstract":[{"text":"Add data to the reader’s internal buffer.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","title":"append(_:)"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"url":"\/documentation\/mcap\/mcapstreamedreader","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","title":"MCAPStreamedReader"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/nextRecord()":{"abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextRecord","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP"},{"text":"?","kind":"text"}],"title":"nextRecord()","url":"\/documentation\/mcap\/mcapstreamedreader\/nextrecord()","kind":"symbol"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/init(decompressHandlers:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"decompressHandlers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DecompressHandlers","kind":"typeIdentifier","preciseIdentifier":"s:4MCAP18DecompressHandlersa"},{"text":")","kind":"text"}],"type":"topic","title":"init(decompressHandlers:)","abstract":[{"text":"Create a streamed reader.","type":"text"}],"url":"\/documentation\/mcap\/mcapstreamedreader\/init(decompresshandlers:)","role":"symbol","kind":"symbol"}}}