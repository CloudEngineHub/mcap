{"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()"]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"MCAP"}],"externalID":"s:4MCAP18MCAPStreamedReaderC","navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"symbolKind":"class","role":"symbol","title":"MCAPStreamedReader","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"roleHeading":"Class"},"abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"type":"text","text":"available up front, this reader emits records as they are encountered. This means it does not use"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Call ","type":"text"},{"type":"reference","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","isActive":true},{"text":" when new data is available to add it to the reader’s internal buffer. Then,","type":"text"},{"text":" ","type":"text"},{"text":"call ","type":"text"},{"type":"reference","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","isActive":true},{"text":" repeatedly to consume records that are fully parseable.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let reader = MCAPStreamedReader()","while let data = readSomeData() {","  reader.append(data)","  while let record = try reader.nextRecord() {","    \/\/ process a record...","  }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/mcapstreamedreader"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP"]]},"references":{"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"url":"\/documentation\/mcap\/mcapstreamedreader","title":"MCAPStreamedReader","navigatorTitle":[{"kind":"identifier","text":"MCAPStreamedReader"}],"type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/nextRecord()":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Record","preciseIdentifier":"s:4MCAP6RecordP"},{"kind":"text","text":"?"}],"url":"\/documentation\/mcap\/mcapstreamedreader\/nextrecord()","title":"nextRecord()","type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/init(decompressHandlers:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)","url":"\/documentation\/mcap\/mcapstreamedreader\/init(decompresshandlers:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"decompressHandlers"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:4MCAP18DecompressHandlersa","text":"DecompressHandlers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(decompressHandlers:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Create a streamed reader."}]},"doc://MCAP/documentation/MCAP":{"role":"collection","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"url":"\/documentation\/mcap","title":"MCAP","type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/append(_:)":{"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","url":"\/documentation\/mcap\/mcapstreamedreader\/append(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Add data to the reader’s internal buffer.","type":"text"}],"title":"append(_:)","role":"symbol","kind":"symbol"}}}