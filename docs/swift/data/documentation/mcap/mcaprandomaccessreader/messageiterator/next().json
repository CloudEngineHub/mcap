{"metadata":{"title":"next()","symbolKind":"method","modules":[{"name":"MCAP"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Message","kind":"typeIdentifier","preciseIdentifier":"s:4MCAP7MessageV"},{"text":"?","kind":"text"}],"externalID":"s:4MCAP22MCAPRandomAccessReaderC15MessageIteratorC4nextAA0E0VSgyKF","roleHeading":"Instance Method"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/mcaprandomaccessreader\/messageiterator\/next()"]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/MessageIterator\/next()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/MessageIterator"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message","preciseIdentifier":"s:4MCAP7MessageV","text":"Message","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message"},{"text":", or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if reading is complete.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any error encountered during reading, decompression, or parsing."}]}],"style":"note"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Retrieve the next message from the file."}],"references":{"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPRandomAccessReader","kind":"identifier"}],"title":"MCAPRandomAccessReader","abstract":[{"text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and","type":"text"},{"text":" ","type":"text"},{"text":"index data to seek in the file and read messages in log-time order, and requires the entire file to","type":"text"},{"text":" ","type":"text"},{"text":"be accessible via byte ranges.","type":"text"}],"navigatorTitle":[{"text":"MCAPRandomAccessReader","kind":"identifier"}],"url":"\/documentation\/mcap\/mcaprandomaccessreader","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","type":"topic","role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader/MessageIterator/next()":{"url":"\/documentation\/mcap\/mcaprandomaccessreader\/messageiterator\/next()","kind":"symbol","role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/MessageIterator\/next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP7MessageV","text":"Message"},{"kind":"text","text":"?"}],"type":"topic","title":"next()","abstract":[{"type":"text","text":"Retrieve the next message from the file."}]},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader/MessageIterator":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MessageIterator","kind":"identifier"}],"title":"MCAPRandomAccessReader.MessageIterator","abstract":[{"text":"An iterator that reads messages from a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"MessageIterator","kind":"identifier"}],"url":"\/documentation\/mcap\/mcaprandomaccessreader\/messageiterator","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/MessageIterator","type":"topic","role":"symbol"},"doc://MCAP/documentation/MCAP/Message":{"abstract":[],"type":"topic","title":"Message","url":"\/documentation\/mcap\/message","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Message"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}],"role":"symbol"},"doc://MCAP/documentation/MCAP":{"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"type":"topic","title":"MCAP","url":"\/documentation\/mcap","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol","role":"collection"}}}