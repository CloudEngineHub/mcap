{"sections":[],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/schemasById"},"metadata":{"roleHeading":"Instance Property","title":"schemasById","role":"symbol","symbolKind":"property","modules":[{"name":"MCAP"}],"externalID":"s:4MCAP22MCAPRandomAccessReaderC11schemasByIdSDys6UInt16VAA6SchemaVGvp","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"schemasById"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"SchemaID","preciseIdentifier":"s:4MCAP8SchemaIDa"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Schema","preciseIdentifier":"s:4MCAP6SchemaV"},{"kind":"text","text":"]"}]},"variants":[{"paths":["\/documentation\/mcap\/mcaprandomaccessreader\/schemasbyid"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"schemasById","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:4MCAP8SchemaIDa","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","text":"SchemaID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:4MCAP6SchemaV","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","text":"Schema","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"]}]}],"references":{"doc://MCAP/documentation/MCAP":{"title":"MCAP","kind":"symbol","type":"topic","url":"\/documentation\/mcap","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP","role":"collection"},"doc://MCAP/documentation/MCAP/SchemaID":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SchemaID"}],"url":"\/documentation\/mcap\/schemaid","kind":"symbol","title":"SchemaID","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaID"}],"abstract":[]},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader/schemasById":{"role":"symbol","url":"\/documentation\/mcap\/mcaprandomaccessreader\/schemasbyid","type":"topic","kind":"symbol","title":"schemasById","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"schemasById","kind":"identifier"},{"text":": [","kind":"text"},{"text":"SchemaID","preciseIdentifier":"s:4MCAP8SchemaIDa","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Schema","preciseIdentifier":"s:4MCAP6SchemaV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/schemasById"},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"title":"MCAPRandomAccessReader","kind":"symbol","type":"topic","url":"\/documentation\/mcap\/mcaprandomaccessreader","abstract":[{"text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and","type":"text"},{"text":" ","type":"text"},{"text":"index data to seek in the file and read messages in log-time order, and requires the entire file to","type":"text"},{"text":" ","type":"text"},{"text":"be accessible via byte ranges.","type":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","navigatorTitle":[{"text":"MCAPRandomAccessReader","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPRandomAccessReader","kind":"identifier"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/Schema":{"url":"\/documentation\/mcap\/schema","kind":"symbol","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"text":"Schema","kind":"identifier"}],"title":"Schema","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Schema","kind":"identifier"}]}}}