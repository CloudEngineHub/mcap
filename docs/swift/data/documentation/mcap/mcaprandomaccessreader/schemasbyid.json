{"sections":[],"variants":[{"paths":["\/documentation\/mcap\/mcaprandomaccessreader\/schemasbyid"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"schemasById","kind":"identifier"},{"text":": [","kind":"text"},{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","preciseIdentifier":"s:4MCAP8SchemaIDa","text":"SchemaID","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","preciseIdentifier":"s:4MCAP6SchemaV","text":"Schema","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"]}]}],"metadata":{"role":"symbol","roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"schemasById"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP8SchemaIDa","text":"SchemaID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6SchemaV","text":"Schema"},{"kind":"text","text":"]"}],"symbolKind":"property","title":"schemasById","modules":[{"name":"MCAP"}],"externalID":"s:4MCAP22MCAPRandomAccessReaderC11schemasByIdSDys6UInt16VAA6SchemaVGvp"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/schemasById"},"references":{"doc://MCAP/documentation/MCAP":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP","url":"\/documentation\/mcap","kind":"symbol","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"title":"MCAP","role":"collection","type":"topic"},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"type":"topic","url":"\/documentation\/mcap\/mcaprandomaccessreader","navigatorTitle":[{"kind":"identifier","text":"MCAPRandomAccessReader"}],"title":"MCAPRandomAccessReader","abstract":[{"type":"text","text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and"},{"type":"text","text":" "},{"type":"text","text":"index data to seek in the file and read messages in log-time order, and requires the entire file to"},{"type":"text","text":" "},{"type":"text","text":"be accessible via byte ranges."}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPRandomAccessReader"}]},"doc://MCAP/documentation/MCAP/SchemaID":{"type":"topic","url":"\/documentation\/mcap\/schemaid","navigatorTitle":[{"kind":"identifier","text":"SchemaID"}],"title":"SchemaID","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaID"}]},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader/schemasById":{"abstract":[],"url":"\/documentation\/mcap\/mcaprandomaccessreader\/schemasbyid","title":"schemasById","kind":"symbol","role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader\/schemasById","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"schemasById"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP8SchemaIDa","text":"SchemaID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6SchemaV","text":"Schema"},{"kind":"text","text":"]"}]},"doc://MCAP/documentation/MCAP/Schema":{"type":"topic","url":"\/documentation\/mcap\/schema","navigatorTitle":[{"kind":"identifier","text":"Schema"}],"title":"Schema","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Schema"}]}}}