{"sections":[],"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter"],"title":"Classes"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","doc:\/\/MCAP\/documentation\/MCAP\/IWritable","doc:\/\/MCAP\/documentation\/MCAP\/Record"],"title":"Protocols"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Attachment","doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","doc:\/\/MCAP\/documentation\/MCAP\/Channel","doc:\/\/MCAP\/documentation\/MCAP\/Chunk","doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","doc:\/\/MCAP\/documentation\/MCAP\/Footer","doc:\/\/MCAP\/documentation\/MCAP\/Header","doc:\/\/MCAP\/documentation\/MCAP\/Message","doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","doc:\/\/MCAP\/documentation\/MCAP\/Metadata","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","doc:\/\/MCAP\/documentation\/MCAP\/Schema","doc:\/\/MCAP\/documentation\/MCAP\/Statistics","doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset"],"title":"Structures"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic"],"title":"Variables"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/ChannelID","doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","doc:\/\/MCAP\/documentation\/MCAP\/Timestamp"],"title":"Type Aliases"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"],"title":"Enumerations"}],"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/mcap.dev\/","type":"reference"},{"text":" is a modular container file format for heterogeneous timestamped data. It is ideal for robotics applications, as it can record multiple streams of structured and unstructured data (e.g. ROS, Protobuf, JSON Schema, etc.) in a single file.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"MCAP works well under various workloads, resource constraints, and durability requirements.","type":"text"}]},{"level":3,"type":"heading","text":"Heterogeneous data","anchor":"Heterogeneous-data"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Store messages encoded in multiple serialization formats in a single file","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Include metadata and attachments"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Performant writing","anchor":"Performant-writing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Append-only structure"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Recover partially-written files when data recording is interrupted"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Efficient seeking","anchor":"Efficient-seeking"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extract data without scanning the entire file"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fast access to indexed summary data"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Self-contained files","anchor":"Self-contained-files"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Embed all message schemas in the file","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No extra dependencies needed for decoding"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Adding MCAP as a dependency","anchor":"Adding-MCAP-as-a-dependency"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"Package.swift","type":"codeVoice"},{"type":"text","text":", add a dependency on this repo, and include the "},{"code":"\"MCAP\"","type":"codeVoice"},{"type":"text","text":" library as a dependency for your target:"}]},{"syntax":"swift","type":"codeListing","code":["Package(","  dependencies: [","    .package(url: \"https:\/\/github.com\/foxglove\/mcap\", from: \"0.1.0\"),","  ],","  targets: [","    .target(name: \"<target>\", dependencies: [","      .product(name: \"MCAP\", package: \"mcap\"),","    ]),","  ]",")"]},{"type":"paragraph","inlineContent":[{"text":"Import the library using ","type":"text"},{"code":"import MCAP","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP","interfaceLanguage":"swift"},"metadata":{"symbolKind":"module","modules":[{"name":"MCAP"}],"role":"collection","externalID":"MCAP","roleHeading":"Framework","title":"MCAP"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap"]}],"kind":"symbol","references":{"doc://MCAP/documentation/MCAP/MetadataIndex":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetadataIndex"}],"navigatorTitle":[{"kind":"identifier","text":"MetadataIndex"}],"kind":"symbol","url":"\/documentation\/mcap\/metadataindex","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","abstract":[],"title":"MetadataIndex"},"doc://MCAP/documentation/MCAP/SchemaID":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaID"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SchemaID"}],"type":"topic","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","title":"SchemaID","url":"\/documentation\/mcap\/schemaid","kind":"symbol"},"doc://MCAP/documentation/MCAP/Opcode":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","title":"Opcode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Opcode"}],"kind":"symbol","url":"\/documentation\/mcap\/opcode","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Opcode"}],"type":"topic"},"doc://MCAP/documentation/MCAP/IRandomAccessReadable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IRandomAccessReadable","kind":"identifier"}],"abstract":[],"url":"\/documentation\/mcap\/irandomaccessreadable","navigatorTitle":[{"text":"IRandomAccessReadable","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","kind":"symbol","title":"IRandomAccessReadable","type":"topic"},"doc://MCAP/documentation/MCAP/Timestamp":{"abstract":[],"kind":"symbol","title":"Timestamp","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timestamp"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Timestamp","navigatorTitle":[{"kind":"identifier","text":"Timestamp"}],"role":"symbol","url":"\/documentation\/mcap\/timestamp"},"doc://MCAP/documentation/MCAP/mcapMagic":{"kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/mcapmagic","title":"mcapMagic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"mcapMagic","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"abstract":[{"type":"text","text":"Magic bytes that appear at the beginning and end of every valid MCAP file: "},{"code":"\"\\u{89}MCAP0\\r\\n\"","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic"},"doc://MCAP/documentation/MCAP/Statistics":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Statistics","navigatorTitle":[{"kind":"identifier","text":"Statistics"}],"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/statistics","title":"Statistics","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Statistics"}]},"doc://MCAP/documentation/MCAP/MessageIndex":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MessageIndex","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","abstract":[],"title":"MessageIndex","kind":"symbol","url":"\/documentation\/mcap\/messageindex","navigatorTitle":[{"text":"MessageIndex","kind":"identifier"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/Metadata":{"role":"symbol","url":"\/documentation\/mcap\/metadata","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata","navigatorTitle":[{"text":"Metadata","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Metadata","kind":"identifier"}],"type":"topic","title":"Metadata","abstract":[]},"doc://MCAP/documentation/MCAP/IWritable":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IWritable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IWritable"}],"title":"IWritable","url":"\/documentation\/mcap\/iwritable","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"IWritable"}],"kind":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/Record":{"role":"symbol","url":"\/documentation\/mcap\/record","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","navigatorTitle":[{"text":"Record","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Record","kind":"identifier"}],"type":"topic","title":"Record","abstract":[]},"doc://MCAP/documentation/MCAP/Schema":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Schema"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","abstract":[],"title":"Schema","kind":"symbol","url":"\/documentation\/mcap\/schema","navigatorTitle":[{"kind":"identifier","text":"Schema"}],"role":"symbol"},"doc://MCAP/documentation/MCAP":{"type":"topic","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"url":"\/documentation\/mcap","title":"MCAP","role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol"},"doc://MCAP/documentation/MCAP/Chunk":{"role":"symbol","url":"\/documentation\/mcap\/chunk","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Chunk","navigatorTitle":[{"text":"Chunk","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Chunk","kind":"identifier"}],"type":"topic","title":"Chunk","abstract":[]},"doc://MCAP/documentation/MCAP/Channel":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel","url":"\/documentation\/mcap\/channel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"abstract":[],"role":"symbol","title":"Channel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}]},"doc://MCAP/documentation/MCAP/AttachmentIndex":{"navigatorTitle":[{"text":"AttachmentIndex","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AttachmentIndex","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","title":"AttachmentIndex","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","url":"\/documentation\/mcap\/attachmentindex","role":"symbol"},"doc://MCAP/documentation/MCAP/DataEnd":{"abstract":[],"kind":"symbol","role":"symbol","type":"topic","title":"DataEnd","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","navigatorTitle":[{"kind":"identifier","text":"DataEnd"}],"url":"\/documentation\/mcap\/dataend","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEnd"}]},"doc://MCAP/documentation/MCAP/ChannelID":{"role":"symbol","title":"ChannelID","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChannelID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelID"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelID"}],"url":"\/documentation\/mcap\/channelid","abstract":[]},"doc://MCAP/documentation/MCAP/Message":{"url":"\/documentation\/mcap\/message","kind":"symbol","title":"Message","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Message"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}],"abstract":[],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message"},"doc://MCAP/documentation/MCAP/SummaryOffset":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset","title":"SummaryOffset","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SummaryOffset"}],"kind":"symbol","url":"\/documentation\/mcap\/summaryoffset","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SummaryOffset"}],"type":"topic"},"doc://MCAP/documentation/MCAP/Footer":{"abstract":[],"kind":"symbol","role":"symbol","type":"topic","title":"Footer","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer","navigatorTitle":[{"kind":"identifier","text":"Footer"}],"url":"\/documentation\/mcap\/footer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Footer"}]},"doc://MCAP/documentation/MCAP/Header":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Header","kind":"identifier"}],"abstract":[],"title":"Header","url":"\/documentation\/mcap\/header","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Header","kind":"identifier"}]},"doc://MCAP/documentation/MCAP/Attachment":{"type":"topic","title":"Attachment","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Attachment","kind":"symbol","url":"\/documentation\/mcap\/attachment","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Attachment"}],"navigatorTitle":[{"kind":"identifier","text":"Attachment"}],"abstract":[]},"doc://MCAP/documentation/MCAP/DecompressHandlers":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecompressHandlers","kind":"identifier"}],"abstract":[],"url":"\/documentation\/mcap\/decompresshandlers","navigatorTitle":[{"text":"DecompressHandlers","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","kind":"symbol","title":"DecompressHandlers","type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"type":"text","text":"available up front, this reader emits records as they are encountered. This means it does not use"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}],"title":"MCAPStreamedReader","kind":"symbol","url":"\/documentation\/mcap\/mcapstreamedreader","navigatorTitle":[{"kind":"identifier","text":"MCAPStreamedReader"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/ChunkIndex":{"role":"symbol","url":"\/documentation\/mcap\/chunkindex","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","navigatorTitle":[{"kind":"identifier","text":"ChunkIndex"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkIndex"}],"type":"topic","title":"ChunkIndex","abstract":[]},"doc://MCAP/documentation/MCAP/MCAPReadError":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPReadError"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","abstract":[],"title":"MCAPReadError","kind":"symbol","url":"\/documentation\/mcap\/mcapreaderror","navigatorTitle":[{"kind":"identifier","text":"MCAPReadError"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPWriter":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter","type":"topic","kind":"symbol","title":"MCAPWriter","navigatorTitle":[{"kind":"identifier","text":"MCAPWriter"}],"url":"\/documentation\/mcap\/mcapwriter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPWriter"}],"abstract":[{"text":"A writer that produces MCAP files, with options to enable compression for smaller files and indexes","type":"text"},{"text":" ","type":"text"},{"text":"for more efficient reading.","type":"text"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"abstract":[{"type":"text","text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and"},{"type":"text","text":" "},{"type":"text","text":"index data to seek in the file and read messages in log-time order, and requires the entire file to"},{"type":"text","text":" "},{"type":"text","text":"be accessible via byte ranges."}],"kind":"symbol","role":"symbol","type":"topic","title":"MCAPRandomAccessReader","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","navigatorTitle":[{"kind":"identifier","text":"MCAPRandomAccessReader"}],"url":"\/documentation\/mcap\/mcaprandomaccessreader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPRandomAccessReader"}]},"https://mcap.dev/":{"title":"MCAP","titleInlineContent":[{"text":"MCAP","type":"text"}],"identifier":"https:\/\/mcap.dev\/","type":"link","url":"https:\/\/mcap.dev\/"}}}