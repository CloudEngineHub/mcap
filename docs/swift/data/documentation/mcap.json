{"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter"]},{"title":"Protocols","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","doc:\/\/MCAP\/documentation\/MCAP\/IWritable","doc:\/\/MCAP\/documentation\/MCAP\/Record"]},{"title":"Structures","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Attachment","doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","doc:\/\/MCAP\/documentation\/MCAP\/Channel","doc:\/\/MCAP\/documentation\/MCAP\/Chunk","doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","doc:\/\/MCAP\/documentation\/MCAP\/Footer","doc:\/\/MCAP\/documentation\/MCAP\/Header","doc:\/\/MCAP\/documentation\/MCAP\/Message","doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","doc:\/\/MCAP\/documentation\/MCAP\/Metadata","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","doc:\/\/MCAP\/documentation\/MCAP\/Schema","doc:\/\/MCAP\/documentation\/MCAP\/Statistics","doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset"]},{"title":"Variables","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic"]},{"title":"Type Aliases","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/ChannelID","doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","doc:\/\/MCAP\/documentation\/MCAP\/Timestamp"]},{"title":"Enumerations","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"]}],"abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/mcap.dev\/","type":"reference"},{"text":" is a modular container file format for heterogeneous timestamped data. It is ideal for robotics applications, as it can record multiple streams of structured and unstructured data (e.g. ROS, Protobuf, JSON Schema, etc.) in a single file.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"MCAP works well under various workloads, resource constraints, and durability requirements."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Heterogeneous data","anchor":"Heterogeneous-data"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Store messages encoded in multiple serialization formats in a single file","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Include metadata and attachments"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Performant writing","anchor":"Performant-writing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Append-only structure","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Recover partially-written files when data recording is interrupted","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Efficient seeking","anchor":"Efficient-seeking"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extract data without scanning the entire file"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fast access to indexed summary data","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Self-contained files","anchor":"Self-contained-files"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Embed all message schemas in the file"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"No extra dependencies needed for decoding","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Adding MCAP as a dependency","anchor":"Adding-MCAP-as-a-dependency"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":", add a dependency on this repo, and include the "},{"type":"codeVoice","code":"\"MCAP\""},{"type":"text","text":" library as a dependency for your target:"}]},{"code":["Package(","  dependencies: [","    .package(url: \"https:\/\/github.com\/foxglove\/mcap\", from: \"0.1.0\"),","  ],","  targets: [","    .target(name: \"<target>\", dependencies: [","      .product(name: \"MCAP\", package: \"mcap\"),","    ]),","  ]",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Import the library using "},{"type":"codeVoice","code":"import MCAP"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap"]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"kind":"symbol","metadata":{"roleHeading":"Framework","title":"MCAP","externalID":"MCAP","symbolKind":"module","role":"collection","modules":[{"name":"MCAP"}]},"sections":[],"references":{"doc://MCAP/documentation/MCAP/Footer":{"title":"Footer","url":"\/documentation\/mcap\/footer","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Footer"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer","navigatorTitle":[{"kind":"identifier","text":"Footer"}]},"doc://MCAP/documentation/MCAP/mcapMagic":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic","type":"topic","abstract":[{"type":"text","text":"Magic bytes that appear at the beginning and end of every valid MCAP file: "},{"type":"codeVoice","code":"\"\\u{89}MCAP0\\r\\n\""},{"type":"text","text":"."}],"title":"mcapMagic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"mcapMagic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"url":"\/documentation\/mcap\/mcapmagic"},"doc://MCAP/documentation/MCAP/DecompressHandlers":{"kind":"symbol","navigatorTitle":[{"text":"DecompressHandlers","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","abstract":[],"url":"\/documentation\/mcap\/decompresshandlers","title":"DecompressHandlers","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecompressHandlers","kind":"identifier"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/Schema":{"role":"symbol","title":"Schema","url":"\/documentation\/mcap\/schema","type":"topic","abstract":[],"navigatorTitle":[{"text":"Schema","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Schema","kind":"identifier"}]},"doc://MCAP/documentation/MCAP/Metadata":{"navigatorTitle":[{"text":"Metadata","kind":"identifier"}],"title":"Metadata","kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/metadata","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Metadata","kind":"identifier"}],"type":"topic"},"doc://MCAP/documentation/MCAP/SummaryOffset":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SummaryOffset"}],"kind":"symbol","url":"\/documentation\/mcap\/summaryoffset","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SummaryOffset"}],"type":"topic","title":"SummaryOffset","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset"},"doc://MCAP/documentation/MCAP":{"kind":"symbol","url":"\/documentation\/mcap","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP","role":"collection","title":"MCAP","type":"topic"},"doc://MCAP/documentation/MCAP/Header":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Header","kind":"identifier"}],"navigatorTitle":[{"text":"Header","kind":"identifier"}],"url":"\/documentation\/mcap\/header","role":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header","abstract":[],"title":"Header","kind":"symbol"},"doc://MCAP/documentation/MCAP/MCAPReadError":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPReadError"}],"navigatorTitle":[{"kind":"identifier","text":"MCAPReadError"}],"abstract":[],"url":"\/documentation\/mcap\/mcapreaderror","role":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","title":"MCAPReadError","kind":"symbol"},"doc://MCAP/documentation/MCAP/Channel":{"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel","title":"Channel","role":"symbol","type":"topic","url":"\/documentation\/mcap\/channel","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}]},"doc://MCAP/documentation/MCAP/Statistics":{"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Statistics","title":"Statistics","role":"symbol","type":"topic","url":"\/documentation\/mcap\/statistics","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Statistics","kind":"identifier"}],"navigatorTitle":[{"text":"Statistics","kind":"identifier"}]},"doc://MCAP/documentation/MCAP/Attachment":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/mcap\/attachment","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Attachment","kind":"identifier"}],"navigatorTitle":[{"text":"Attachment","kind":"identifier"}],"title":"Attachment","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Attachment"},"doc://MCAP/documentation/MCAP/MetadataIndex":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","role":"symbol","kind":"symbol","title":"MetadataIndex","navigatorTitle":[{"text":"MetadataIndex","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetadataIndex","kind":"identifier"}],"url":"\/documentation\/mcap\/metadataindex","abstract":[]},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"navigatorTitle":[{"text":"MCAPRandomAccessReader","kind":"identifier"}],"role":"symbol","title":"MCAPRandomAccessReader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MCAPRandomAccessReader","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and","type":"text"},{"text":" ","type":"text"},{"text":"index data to seek in the file and read messages in log-time order, and requires the entire file to","type":"text"},{"text":" ","type":"text"},{"text":"be accessible via byte ranges.","type":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","url":"\/documentation\/mcap\/mcaprandomaccessreader"},"doc://MCAP/documentation/MCAP/IRandomAccessReadable":{"title":"IRandomAccessReadable","abstract":[],"type":"topic","url":"\/documentation\/mcap\/irandomaccessreadable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IRandomAccessReadable"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IRandomAccessReadable"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","kind":"symbol"},"doc://MCAP/documentation/MCAP/ChunkIndex":{"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","title":"ChunkIndex","role":"symbol","type":"topic","url":"\/documentation\/mcap\/chunkindex","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkIndex"}],"navigatorTitle":[{"kind":"identifier","text":"ChunkIndex"}]},"doc://MCAP/documentation/MCAP/SchemaID":{"title":"SchemaID","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SchemaID","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"SchemaID","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","role":"symbol","url":"\/documentation\/mcap\/schemaid"},"doc://MCAP/documentation/MCAP/Opcode":{"navigatorTitle":[{"text":"Opcode","kind":"identifier"}],"role":"symbol","title":"Opcode","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Opcode","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","url":"\/documentation\/mcap\/opcode"},"doc://MCAP/documentation/MCAP/Record":{"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","title":"Record","role":"symbol","type":"topic","url":"\/documentation\/mcap\/record","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}],"navigatorTitle":[{"kind":"identifier","text":"Record"}]},"doc://MCAP/documentation/MCAP/AttachmentIndex":{"navigatorTitle":[{"text":"AttachmentIndex","kind":"identifier"}],"role":"symbol","title":"AttachmentIndex","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AttachmentIndex","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","url":"\/documentation\/mcap\/attachmentindex"},"doc://MCAP/documentation/MCAP/DataEnd":{"role":"symbol","type":"topic","url":"\/documentation\/mcap\/dataend","title":"DataEnd","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEnd","kind":"identifier"}],"navigatorTitle":[{"text":"DataEnd","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","abstract":[]},"https://mcap.dev/":{"titleInlineContent":[{"text":"MCAP","type":"text"}],"url":"https:\/\/mcap.dev\/","identifier":"https:\/\/mcap.dev\/","type":"link","title":"MCAP"},"doc://MCAP/documentation/MCAP/Timestamp":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timestamp"}],"kind":"symbol","url":"\/documentation\/mcap\/timestamp","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Timestamp"}],"type":"topic","title":"Timestamp","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Timestamp"},"doc://MCAP/documentation/MCAP/MCAPWriter":{"abstract":[{"text":"A writer that produces MCAP files, with options to enable compression for smaller files and indexes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for more efficient reading."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPWriter"}],"role":"symbol","title":"MCAPWriter","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter","kind":"symbol","url":"\/documentation\/mcap\/mcapwriter","navigatorTitle":[{"kind":"identifier","text":"MCAPWriter"}]},"doc://MCAP/documentation/MCAP/ChannelID":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelID"}],"kind":"symbol","url":"\/documentation\/mcap\/channelid","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ChannelID"}],"type":"topic","title":"ChannelID","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChannelID"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/mcap\/mcapstreamedreader","abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}],"navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"type":"topic","title":"MCAPStreamedReader","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader"},"doc://MCAP/documentation/MCAP/Chunk":{"abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Chunk","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Chunk","kind":"identifier"}],"navigatorTitle":[{"text":"Chunk","kind":"identifier"}],"role":"symbol","title":"Chunk","url":"\/documentation\/mcap\/chunk","type":"topic"},"doc://MCAP/documentation/MCAP/IWritable":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IWritable","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"IWritable"}],"title":"IWritable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IWritable"}],"url":"\/documentation\/mcap\/iwritable"},"doc://MCAP/documentation/MCAP/MessageIndex":{"navigatorTitle":[{"text":"MessageIndex","kind":"identifier"}],"role":"symbol","title":"MessageIndex","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MessageIndex","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","url":"\/documentation\/mcap\/messageindex"},"doc://MCAP/documentation/MCAP/Message":{"navigatorTitle":[{"kind":"identifier","text":"Message"}],"role":"symbol","title":"Message","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message","url":"\/documentation\/mcap\/message"}}}